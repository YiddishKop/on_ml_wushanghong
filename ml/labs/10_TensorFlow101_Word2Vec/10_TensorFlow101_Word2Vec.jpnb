{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#  TensorFlow 101 & Word2Vec \n",
    "\n",
    "<center>Shan-Hung Wu & DataLab<br/>Fall 2017</center>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "TensorFlow is a powerful open source libraray used for large-scale machine learning.  \n",
    "In this lab, we will first go through some basic concepts of TensorFlow. We will then look at the word2vec model and the `Dataset` API."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Environment Setup \n",
    "\n",
    "## Installing CUDA and CuDNN\n",
    "In order to use NVIDIA GPUs to train your model, CUDA and CuDNN are required.\n",
    "The installation guide can be found [here](https://www.nvidia.com/en-us/data-center/gpu-accelerated-applications/tensorflow/).\n",
    "\n",
    "## Installing TensorFlow\n",
    "There are several ways to install TensorFlow which can be found [here](https://www.tensorflow.org/install/). One way is to install TensorFlow in a conda virtual environment. First, we create a new environment called `tensorflow`.  \n",
    "```\n",
    "> conda create -n tensorflow\n",
    "```\n",
    "Then we activate the environment:\n",
    "```\n",
    "> source activate tensorflow (Linux or Mac)\n",
    "> activate tensorflow (Windows)\n",
    "```\n",
    "\n",
    "According to the TensorFlow official webpage, it is recommended installing TensorFlow with `pip install` command instead of `conda install`. Since the conda package is community supported, not officially supported, we will stick to `pip install`.  \n",
    "\n",
    "First, make sure that `pip3` is installed:\n",
    "```\n",
    "> pip3 -V\n",
    "```\n",
    "Install TensorFlow with `pip install`:\n",
    "```\n",
    "> pip3 install tensorflow-gpu # Python 3.n; GPU support \n",
    "```\n",
    "Then we can verify the installation by entering a short program in the python interactive shell.\n",
    "```\n",
    "> python\n",
    "```\n",
    "Type in the following program:\n",
    "```\n",
    "import tensorflow as tf\n",
    "hello = tf.constant('Hello, TensorFlow!')\n",
    "sess = tf.Session()\n",
    "print(sess.run(hello))\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#  Getting Started with TensorFlow \n",
    "\n",
    "Originally developed by Google Brain, TensorFlow is an open source library which provides a variety of functions and classes used to conduct machine learning.\n",
    "\n",
    "The benefits of using TensorFlow include:\n",
    "- Python API\n",
    "- Portability: can be used on multiple CPUs or GPUs as well as on mobile devices\n",
    "- Flexibility: can run on different devices e.g. Raspberry Pi, Android, iOS, Windows, Linux\n",
    "- Visualization: visualize the training process via TensorBoard\n",
    "- Checkpoints: manage trained models\n",
    "- Auto-differentiation\n",
    "- Large community "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Graphs and Sessions\n",
    "\n",
    "In TensorFlow, the definition of computations is separated from their execution. First, we specify the operations by building a data flow graph in Python. Next, TensorFlow runs the graph with a `Session` using optimized C++ code. Let's import tensorflow first and create a session."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "import tensorflow as tf\n",
    "sess = tf.InteractiveSession()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "### Tensors\n",
    "\n",
    "A **Tensor** is an array of any dimension. The **rank** of a tensor refers to the number of dimensions it has.\n",
    "\n",
    "A rank 0 tensor with shape [ ]:\n",
    "```\n",
    "> 3\n",
    "```\n",
    "\n",
    "A vector - a rank 1 tensor with shape [3]:\n",
    "```\n",
    "[1.0, 2.0, 3.0]\n",
    "```\n",
    "\n",
    "A matrix - a rank 2 tensor with shape [2, 3]\n",
    "```\n",
    "[[1.0, 2.0, 3.0], \n",
    " [4.0, 5.0, 6.0]]\n",
    "```\n",
    "\n",
    "A rank 3 tensor with shape [2,1,3]\n",
    "```\n",
    "[[[1.0, 2.0, 3.0]], \n",
    " [[7.0, 8.0, 9.0]]]\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Constants\n",
    "We can create constants by passing lists or constants into the `tf.constant` function.\n",
    "```\n",
    "tf.constant(value, dtype=None, shape=None, name='Const', verify_shape=False)\n",
    "```\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([2, 2], dtype=int32)"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# constant of 1d tensor (vector)\n",
    "a = tf.constant([2, 2], dtype=tf.int32, name=\"vector\")\n",
    "a.eval()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0, 1],\n",
       "       [2, 3]], dtype=int32)"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# constant of 2x2 tensor (matrix)\n",
    "b = tf.constant([[0, 1], [2, 3]], name=\"b\")\n",
    "b.eval()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can also create tensors of a specific value."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0, 0, 0],\n",
       "       [0, 0, 0]], dtype=int32)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "c = tf.zeros([2, 3], tf.int32) # [[0, 0, 0], [0, 0, 0]]\n",
    "c.eval()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[1, 1, 1],\n",
       "       [1, 1, 1]], dtype=int32)"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "d = tf.ones([2, 3], tf.int32) #  [[1, 1, 1], [1, 1, 1]]\n",
    "d.eval()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 0.,  0.],\n",
       "       [ 0.,  0.],\n",
       "       [ 0.,  0.]], dtype=float32)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create a tensor containing zeros, with shape and type as input_tensor\n",
    "input_tensor = tf.constant([[1,1], [2,2], [3,3]], dtype=tf.float32)\n",
    "e = tf.zeros_like(input_tensor)  #  [[0, 0], [0, 0], [0, 0]]\n",
    "e.eval()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 1.,  1.],\n",
       "       [ 1.,  1.],\n",
       "       [ 1.,  1.]], dtype=float32)"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "f = tf.ones_like(input_tensor) # [[1, 1], [1, 1], [1, 1]]\n",
    "f.eval()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Variables\n",
    "\n",
    "Unlike a constant, a variable can be assigned to, so its value can be changed. Also, a constant's value is stored on the graph, whereas a variable's value is stored seperately. To declare a variable, we create a instance of `tf.Variable`.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    " #create variable a with scalar value\n",
    "a = tf.Variable(2, name=\"scalar\")\n",
    "#create variable b as a vector\n",
    "b = tf.Variable([2, 3], name=\"vector\")\n",
    "#create variable c as a 2x2 matrix\n",
    "c = tf.Variable([[0, 1], [2, 3]], name=\"matrix\")\n",
    "# create variable W as 784 x 10 tensor, filled with zeros\n",
    "W = tf.Variable(tf.zeros([784,10]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To assign value to variables, we can use `tf.Variable.assign()`. It creates a operation that assigns the variable with the specified value. Also, it is important to remember that a variable needs to be **initialized** before used. To initialize variables, run `tf.global_variables_initializer()`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "4"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# assign a * 2 to a and call that op a_times_two\n",
    "a = tf.Variable(2, name=\"scalar\")\n",
    "a_times_two = a.assign(a*2) # an operation that assigns value a*2 to a\n",
    "\n",
    "init = tf.global_variables_initializer() # an operation that initializes all variables\n",
    "sess.run(init) # run the init operation with session\n",
    "sess.run(a_times_two)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "ename": "FailedPreconditionError",
     "evalue": "Attempting to use uninitialized value scalar_2\n\t [[Node: _retval_scalar_2_0_0 = _Retval[T=DT_INT32, index=0, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](scalar_2)]]",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mFailedPreconditionError\u001b[0m                   Traceback (most recent call last)",
      "\u001b[0;32m~/anaconda3/lib/python3.5/site-packages/tensorflow/python/client/session.py\u001b[0m in \u001b[0;36m_do_call\u001b[0;34m(self, fn, *args)\u001b[0m\n\u001b[1;32m   1326\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1327\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mfn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1328\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mOpError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.5/site-packages/tensorflow/python/client/session.py\u001b[0m in \u001b[0;36m_run_fn\u001b[0;34m(session, feed_dict, fetch_list, target_list, options, run_metadata)\u001b[0m\n\u001b[1;32m   1305\u001b[0m                                    \u001b[0mfeed_dict\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfetch_list\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtarget_list\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1306\u001b[0;31m                                    status, run_metadata)\n\u001b[0m\u001b[1;32m   1307\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.5/contextlib.py\u001b[0m in \u001b[0;36m__exit__\u001b[0;34m(self, type, value, traceback)\u001b[0m\n\u001b[1;32m     65\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 66\u001b[0;31m                 \u001b[0mnext\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgen\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     67\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mStopIteration\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.5/site-packages/tensorflow/python/framework/errors_impl.py\u001b[0m in \u001b[0;36mraise_exception_on_not_ok_status\u001b[0;34m()\u001b[0m\n\u001b[1;32m    465\u001b[0m           \u001b[0mcompat\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mas_text\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpywrap_tensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mTF_Message\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstatus\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 466\u001b[0;31m           pywrap_tensorflow.TF_GetCode(status))\n\u001b[0m\u001b[1;32m    467\u001b[0m   \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mFailedPreconditionError\u001b[0m: Attempting to use uninitialized value scalar_2\n\t [[Node: _retval_scalar_2_0_0 = _Retval[T=DT_INT32, index=0, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](scalar_2)]]",
      "\nDuring handling of the above exception, another exception occurred:\n",
      "\u001b[0;31mFailedPreconditionError\u001b[0m                   Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-10-b658d49edc57>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m# If a variable is used before initialized, an error will occur\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0ma\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mVariable\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"scalar\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0ma\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0meval\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m# a is NOT initialized\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;32m~/anaconda3/lib/python3.5/site-packages/tensorflow/python/ops/variables.py\u001b[0m in \u001b[0;36meval\u001b[0;34m(self, session)\u001b[0m\n\u001b[1;32m    472\u001b[0m       \u001b[0mA\u001b[0m \u001b[0mnumpy\u001b[0m\u001b[0;31m \u001b[0m\u001b[0;31m`\u001b[0m\u001b[0mndarray\u001b[0m\u001b[0;31m`\u001b[0m \u001b[0;32mwith\u001b[0m \u001b[0ma\u001b[0m \u001b[0mcopy\u001b[0m \u001b[0mof\u001b[0m \u001b[0mthe\u001b[0m \u001b[0mvalue\u001b[0m \u001b[0mof\u001b[0m \u001b[0mthis\u001b[0m \u001b[0mvariable\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    473\u001b[0m     \"\"\"\n\u001b[0;32m--> 474\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_variable\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0meval\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msession\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msession\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    475\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    476\u001b[0m   \u001b[0;32mdef\u001b[0m \u001b[0minitialized_value\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\u001b[0m in \u001b[0;36meval\u001b[0;34m(self, feed_dict, session)\u001b[0m\n\u001b[1;32m    539\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    540\u001b[0m     \"\"\"\n\u001b[0;32m--> 541\u001b[0;31m     \u001b[0;32mreturn\u001b[0m \u001b[0m_eval_using_default_session\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfeed_dict\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgraph\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msession\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    542\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    543\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\u001b[0m in \u001b[0;36m_eval_using_default_session\u001b[0;34m(tensors, feed_dict, graph, session)\u001b[0m\n\u001b[1;32m   4083\u001b[0m                        \u001b[0;34m\"the tensor's graph is different from the session's \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4084\u001b[0m                        \"graph.\")\n\u001b[0;32m-> 4085\u001b[0;31m   \u001b[0;32mreturn\u001b[0m \u001b[0msession\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrun\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtensors\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfeed_dict\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4086\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4087\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.5/site-packages/tensorflow/python/client/session.py\u001b[0m in \u001b[0;36mrun\u001b[0;34m(self, fetches, feed_dict, options, run_metadata)\u001b[0m\n\u001b[1;32m    893\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    894\u001b[0m       result = self._run(None, fetches, feed_dict, options_ptr,\n\u001b[0;32m--> 895\u001b[0;31m                          run_metadata_ptr)\n\u001b[0m\u001b[1;32m    896\u001b[0m       \u001b[0;32mif\u001b[0m \u001b[0mrun_metadata\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    897\u001b[0m         \u001b[0mproto_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtf_session\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mTF_GetBuffer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrun_metadata_ptr\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.5/site-packages/tensorflow/python/client/session.py\u001b[0m in \u001b[0;36m_run\u001b[0;34m(self, handle, fetches, feed_dict, options, run_metadata)\u001b[0m\n\u001b[1;32m   1122\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mfinal_fetches\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mfinal_targets\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mhandle\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mfeed_dict_tensor\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1123\u001b[0m       results = self._do_run(handle, final_targets, final_fetches,\n\u001b[0;32m-> 1124\u001b[0;31m                              feed_dict_tensor, options, run_metadata)\n\u001b[0m\u001b[1;32m   1125\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1126\u001b[0m       \u001b[0mresults\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.5/site-packages/tensorflow/python/client/session.py\u001b[0m in \u001b[0;36m_do_run\u001b[0;34m(self, handle, target_list, fetch_list, feed_dict, options, run_metadata)\u001b[0m\n\u001b[1;32m   1319\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mhandle\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1320\u001b[0m       return self._do_call(_run_fn, self._session, feeds, fetches, targets,\n\u001b[0;32m-> 1321\u001b[0;31m                            options, run_metadata)\n\u001b[0m\u001b[1;32m   1322\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1323\u001b[0m       \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_do_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_prun_fn\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_session\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mhandle\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfeeds\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfetches\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.5/site-packages/tensorflow/python/client/session.py\u001b[0m in \u001b[0;36m_do_call\u001b[0;34m(self, fn, *args)\u001b[0m\n\u001b[1;32m   1338\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1339\u001b[0m           \u001b[0;32mpass\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1340\u001b[0;31m       \u001b[0;32mraise\u001b[0m \u001b[0mtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnode_def\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mop\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmessage\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1341\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1342\u001b[0m   \u001b[0;32mdef\u001b[0m \u001b[0m_extend_graph\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mFailedPreconditionError\u001b[0m: Attempting to use uninitialized value scalar_2\n\t [[Node: _retval_scalar_2_0_0 = _Retval[T=DT_INT32, index=0, _device=\"/job:localhost/replica:0/task:0/cpu:0\"](scalar_2)]]"
     ]
    }
   ],
   "source": [
    "# If a variable is used before initialized, an error will occur\n",
    "a = tf.Variable(2, name=\"scalar\")\n",
    "a.eval() # a is NOT initialized"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Building a data flow graph\n",
    "\n",
    "A data flow graph consists of nodes, each representing an operation. Each node takes zero or more tensors as inputs and produces a tensor as an output. A TensorFlow constant is a type of node which takes no inputs and outputs the value it stores. We create two floating point tensors and add them with an `add` operation (which is also a node)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Tensor(\"Const_1:0\", shape=(), dtype=float32)\n",
      "Tensor(\"Const_2:0\", shape=(), dtype=float32)\n",
      "Tensor(\"Add:0\", shape=(), dtype=float32)\n"
     ]
    }
   ],
   "source": [
    "node1 = tf.constant(3.0, dtype=tf.float32)\n",
    "node2 = tf.constant(4.0) # also tf.float32 implicitly\n",
    "node3 = tf.add(node1, node2) \n",
    "\n",
    "print(node1) \n",
    "print(node2)\n",
    "print(node3)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Note that printing the node would not output the values `3.0` and `4.0`. Instead, `node1` and `node2` output `3.0` and `4.0` when they are evaluated. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Visualizing and running a graph\n",
    "After building a graph, we can visualize our graph using TensorBoard. To do this, we create a directory `graph` to store the event data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# create a directory to store our graph\n",
    "import os\n",
    "\n",
    "logs_dir = './graph'\n",
    "if not os.path.exists(logs_dir):\n",
    "    os.makedirs(logs_dir)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To evaluate a graph, a `Session` is used. A TensorFlow session places operations onto devices such as CPUs and GPUs and runs them, and computes variable values. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[3.0, 4.0]\n",
      "7.0\n"
     ]
    }
   ],
   "source": [
    "sess = tf.Session()\n",
    "print(sess.run([node1, node2]))\n",
    "print(sess.run(node3))\n",
    "sess.close() # close the session"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Alternatively, we can create and run a session with the following code:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[3.0, 4.0]\n",
      "7.0\n"
     ]
    }
   ],
   "source": [
    "with tf.Session() as sess:\n",
    "  # write operations to the event file\n",
    "  writer = tf.summary.FileWriter(logs_dir, sess.graph) \n",
    "  print(sess.run([node1, node2]))\n",
    "  print(sess.run(node3))\n",
    "  # no need to write sess.close()\n",
    "  \n",
    "writer.close() "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To visualize the graph, go to the directory where we ran our jupyter notebook and start tensorboard.\n",
    "```\n",
    "> cd path/to/your/notebook\n",
    "> tensorboard --logdir=\"graphs/\"\n",
    "```\n",
    "Open your browser and go to http://localhost:6006/, in the tab graph and you will see something like this:\n",
    "<img src=\"files/graph.jpeg\" width=\"350\">"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "###  Placeholders and feed_dict\n",
    "Creating a graph of constants as the above is not particularly useful. A graph can be defined to accept external inputs without knowing the actual values needed for computation. A `placeholder` is used as a promise to provide a value later. Then, values are fed into the placeholder by providing a dictionary containing concrete values as argument for `feed_dict`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[ 6.  7.  8.]\n"
     ]
    }
   ],
   "source": [
    "# create a placeholder of type float 32-bit, shape is a vector of 3 elements\n",
    "a = tf.placeholder(tf.float32, shape=[3])\n",
    "# create a constant of type float 32-bit, shape is a vector of 3 elements\n",
    "b = tf.constant([5, 5, 5], tf.float32)\n",
    "# use the placeholder as you would a constant or a variable\n",
    "c = a + b # Short for tf.add(a, b)\n",
    "with tf.Session() as sess:\n",
    "# feed [1, 2, 3] to placeholder a via the dict {a: [1, 2, 3]}\n",
    "# fetch value of c\n",
    "    print(sess.run(c, feed_dict={a: [1, 2, 3]}))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "If we did not feed values into the placeholder, an error will occur."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "ename": "InvalidArgumentError",
     "evalue": "You must feed a value for placeholder tensor 'Placeholder_1' with dtype float and shape [3]\n\t [[Node: Placeholder_1 = Placeholder[dtype=DT_FLOAT, shape=[3], _device=\"/job:localhost/replica:0/task:0/gpu:0\"]()]]\n\t [[Node: add_1/_1 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device_incarnation=1, tensor_name=\"edge_8_add_1\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/cpu:0\"]()]]\n\nCaused by op 'Placeholder_1', defined at:\n  File \"/home/mrplayer/anaconda3/lib/python3.5/runpy.py\", line 184, in _run_module_as_main\n    \"__main__\", mod_spec)\n  File \"/home/mrplayer/anaconda3/lib/python3.5/runpy.py\", line 85, in _run_code\n    exec(code, run_globals)\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/ipykernel/__main__.py\", line 3, in <module>\n    app.launch_new_instance()\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/traitlets/config/application.py\", line 658, in launch_instance\n    app.start()\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/ipykernel/kernelapp.py\", line 474, in start\n    ioloop.IOLoop.instance().start()\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/zmq/eventloop/ioloop.py\", line 162, in start\n    super(ZMQIOLoop, self).start()\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/tornado/ioloop.py\", line 887, in start\n    handler_func(fd_obj, events)\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/tornado/stack_context.py\", line 275, in null_wrapper\n    return fn(*args, **kwargs)\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/zmq/eventloop/zmqstream.py\", line 440, in _handle_events\n    self._handle_recv()\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/zmq/eventloop/zmqstream.py\", line 472, in _handle_recv\n    self._run_callback(callback, msg)\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/zmq/eventloop/zmqstream.py\", line 414, in _run_callback\n    callback(*args, **kwargs)\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/tornado/stack_context.py\", line 275, in null_wrapper\n    return fn(*args, **kwargs)\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/ipykernel/kernelbase.py\", line 276, in dispatcher\n    return self.dispatch_shell(stream, msg)\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/ipykernel/kernelbase.py\", line 228, in dispatch_shell\n    handler(stream, idents, msg)\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/ipykernel/kernelbase.py\", line 390, in execute_request\n    user_expressions, allow_stdin)\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/ipykernel/ipkernel.py\", line 196, in do_execute\n    res = shell.run_cell(code, store_history=store_history, silent=silent)\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/ipykernel/zmqshell.py\", line 501, in run_cell\n    return super(ZMQInteractiveShell, self).run_cell(*args, **kwargs)\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/IPython/core/interactiveshell.py\", line 2728, in run_cell\n    interactivity=interactivity, compiler=compiler, result=result)\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/IPython/core/interactiveshell.py\", line 2850, in run_ast_nodes\n    if self.run_code(code, result):\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/IPython/core/interactiveshell.py\", line 2910, in run_code\n    exec(code_obj, self.user_global_ns, self.user_ns)\n  File \"<ipython-input-16-4b14b26bf447>\", line 2, in <module>\n    a = tf.placeholder(tf.float32, shape=[3])\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/tensorflow/python/ops/array_ops.py\", line 1548, in placeholder\n    return gen_array_ops._placeholder(dtype=dtype, shape=shape, name=name)\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/tensorflow/python/ops/gen_array_ops.py\", line 2094, in _placeholder\n    name=name)\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/tensorflow/python/framework/op_def_library.py\", line 767, in apply_op\n    op_def=op_def)\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 2630, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 1204, in __init__\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\n\nInvalidArgumentError (see above for traceback): You must feed a value for placeholder tensor 'Placeholder_1' with dtype float and shape [3]\n\t [[Node: Placeholder_1 = Placeholder[dtype=DT_FLOAT, shape=[3], _device=\"/job:localhost/replica:0/task:0/gpu:0\"]()]]\n\t [[Node: add_1/_1 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device_incarnation=1, tensor_name=\"edge_8_add_1\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/cpu:0\"]()]]\n",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mInvalidArgumentError\u001b[0m                      Traceback (most recent call last)",
      "\u001b[0;32m~/anaconda3/lib/python3.5/site-packages/tensorflow/python/client/session.py\u001b[0m in \u001b[0;36m_do_call\u001b[0;34m(self, fn, *args)\u001b[0m\n\u001b[1;32m   1326\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1327\u001b[0;31m       \u001b[0;32mreturn\u001b[0m \u001b[0mfn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1328\u001b[0m     \u001b[0;32mexcept\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mOpError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.5/site-packages/tensorflow/python/client/session.py\u001b[0m in \u001b[0;36m_run_fn\u001b[0;34m(session, feed_dict, fetch_list, target_list, options, run_metadata)\u001b[0m\n\u001b[1;32m   1305\u001b[0m                                    \u001b[0mfeed_dict\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfetch_list\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtarget_list\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1306\u001b[0;31m                                    status, run_metadata)\n\u001b[0m\u001b[1;32m   1307\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.5/contextlib.py\u001b[0m in \u001b[0;36m__exit__\u001b[0;34m(self, type, value, traceback)\u001b[0m\n\u001b[1;32m     65\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 66\u001b[0;31m                 \u001b[0mnext\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgen\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     67\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mStopIteration\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.5/site-packages/tensorflow/python/framework/errors_impl.py\u001b[0m in \u001b[0;36mraise_exception_on_not_ok_status\u001b[0;34m()\u001b[0m\n\u001b[1;32m    465\u001b[0m           \u001b[0mcompat\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mas_text\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpywrap_tensorflow\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mTF_Message\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstatus\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 466\u001b[0;31m           pywrap_tensorflow.TF_GetCode(status))\n\u001b[0m\u001b[1;32m    467\u001b[0m   \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mInvalidArgumentError\u001b[0m: You must feed a value for placeholder tensor 'Placeholder_1' with dtype float and shape [3]\n\t [[Node: Placeholder_1 = Placeholder[dtype=DT_FLOAT, shape=[3], _device=\"/job:localhost/replica:0/task:0/gpu:0\"]()]]\n\t [[Node: add_1/_1 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device_incarnation=1, tensor_name=\"edge_8_add_1\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/cpu:0\"]()]]",
      "\nDuring handling of the above exception, another exception occurred:\n",
      "\u001b[0;31mInvalidArgumentError\u001b[0m                      Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-16-4b14b26bf447>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0;31m#If we try to fetch c, we will run into error.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0;32mwith\u001b[0m \u001b[0mtf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mSession\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0msess\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 9\u001b[0;31m     \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msess\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrun\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;32m~/anaconda3/lib/python3.5/site-packages/tensorflow/python/client/session.py\u001b[0m in \u001b[0;36mrun\u001b[0;34m(self, fetches, feed_dict, options, run_metadata)\u001b[0m\n\u001b[1;32m    893\u001b[0m     \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    894\u001b[0m       result = self._run(None, fetches, feed_dict, options_ptr,\n\u001b[0;32m--> 895\u001b[0;31m                          run_metadata_ptr)\n\u001b[0m\u001b[1;32m    896\u001b[0m       \u001b[0;32mif\u001b[0m \u001b[0mrun_metadata\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    897\u001b[0m         \u001b[0mproto_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtf_session\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mTF_GetBuffer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrun_metadata_ptr\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.5/site-packages/tensorflow/python/client/session.py\u001b[0m in \u001b[0;36m_run\u001b[0;34m(self, handle, fetches, feed_dict, options, run_metadata)\u001b[0m\n\u001b[1;32m   1122\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mfinal_fetches\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mfinal_targets\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mhandle\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mfeed_dict_tensor\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1123\u001b[0m       results = self._do_run(handle, final_targets, final_fetches,\n\u001b[0;32m-> 1124\u001b[0;31m                              feed_dict_tensor, options, run_metadata)\n\u001b[0m\u001b[1;32m   1125\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1126\u001b[0m       \u001b[0mresults\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.5/site-packages/tensorflow/python/client/session.py\u001b[0m in \u001b[0;36m_do_run\u001b[0;34m(self, handle, target_list, fetch_list, feed_dict, options, run_metadata)\u001b[0m\n\u001b[1;32m   1319\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mhandle\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1320\u001b[0m       return self._do_call(_run_fn, self._session, feeds, fetches, targets,\n\u001b[0;32m-> 1321\u001b[0;31m                            options, run_metadata)\n\u001b[0m\u001b[1;32m   1322\u001b[0m     \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1323\u001b[0m       \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_do_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_prun_fn\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_session\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mhandle\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfeeds\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mfetches\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;32m~/anaconda3/lib/python3.5/site-packages/tensorflow/python/client/session.py\u001b[0m in \u001b[0;36m_do_call\u001b[0;34m(self, fn, *args)\u001b[0m\n\u001b[1;32m   1338\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1339\u001b[0m           \u001b[0;32mpass\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1340\u001b[0;31m       \u001b[0;32mraise\u001b[0m \u001b[0mtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0me\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnode_def\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mop\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmessage\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1341\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1342\u001b[0m   \u001b[0;32mdef\u001b[0m \u001b[0m_extend_graph\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mInvalidArgumentError\u001b[0m: You must feed a value for placeholder tensor 'Placeholder_1' with dtype float and shape [3]\n\t [[Node: Placeholder_1 = Placeholder[dtype=DT_FLOAT, shape=[3], _device=\"/job:localhost/replica:0/task:0/gpu:0\"]()]]\n\t [[Node: add_1/_1 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device_incarnation=1, tensor_name=\"edge_8_add_1\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/cpu:0\"]()]]\n\nCaused by op 'Placeholder_1', defined at:\n  File \"/home/mrplayer/anaconda3/lib/python3.5/runpy.py\", line 184, in _run_module_as_main\n    \"__main__\", mod_spec)\n  File \"/home/mrplayer/anaconda3/lib/python3.5/runpy.py\", line 85, in _run_code\n    exec(code, run_globals)\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/ipykernel/__main__.py\", line 3, in <module>\n    app.launch_new_instance()\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/traitlets/config/application.py\", line 658, in launch_instance\n    app.start()\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/ipykernel/kernelapp.py\", line 474, in start\n    ioloop.IOLoop.instance().start()\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/zmq/eventloop/ioloop.py\", line 162, in start\n    super(ZMQIOLoop, self).start()\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/tornado/ioloop.py\", line 887, in start\n    handler_func(fd_obj, events)\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/tornado/stack_context.py\", line 275, in null_wrapper\n    return fn(*args, **kwargs)\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/zmq/eventloop/zmqstream.py\", line 440, in _handle_events\n    self._handle_recv()\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/zmq/eventloop/zmqstream.py\", line 472, in _handle_recv\n    self._run_callback(callback, msg)\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/zmq/eventloop/zmqstream.py\", line 414, in _run_callback\n    callback(*args, **kwargs)\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/tornado/stack_context.py\", line 275, in null_wrapper\n    return fn(*args, **kwargs)\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/ipykernel/kernelbase.py\", line 276, in dispatcher\n    return self.dispatch_shell(stream, msg)\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/ipykernel/kernelbase.py\", line 228, in dispatch_shell\n    handler(stream, idents, msg)\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/ipykernel/kernelbase.py\", line 390, in execute_request\n    user_expressions, allow_stdin)\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/ipykernel/ipkernel.py\", line 196, in do_execute\n    res = shell.run_cell(code, store_history=store_history, silent=silent)\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/ipykernel/zmqshell.py\", line 501, in run_cell\n    return super(ZMQInteractiveShell, self).run_cell(*args, **kwargs)\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/IPython/core/interactiveshell.py\", line 2728, in run_cell\n    interactivity=interactivity, compiler=compiler, result=result)\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/IPython/core/interactiveshell.py\", line 2850, in run_ast_nodes\n    if self.run_code(code, result):\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/IPython/core/interactiveshell.py\", line 2910, in run_code\n    exec(code_obj, self.user_global_ns, self.user_ns)\n  File \"<ipython-input-16-4b14b26bf447>\", line 2, in <module>\n    a = tf.placeholder(tf.float32, shape=[3])\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/tensorflow/python/ops/array_ops.py\", line 1548, in placeholder\n    return gen_array_ops._placeholder(dtype=dtype, shape=shape, name=name)\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/tensorflow/python/ops/gen_array_ops.py\", line 2094, in _placeholder\n    name=name)\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/tensorflow/python/framework/op_def_library.py\", line 767, in apply_op\n    op_def=op_def)\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 2630, in create_op\n    original_op=self._default_original_op, op_def=op_def)\n  File \"/home/mrplayer/anaconda3/lib/python3.5/site-packages/tensorflow/python/framework/ops.py\", line 1204, in __init__\n    self._traceback = self._graph._extract_stack()  # pylint: disable=protected-access\n\nInvalidArgumentError (see above for traceback): You must feed a value for placeholder tensor 'Placeholder_1' with dtype float and shape [3]\n\t [[Node: Placeholder_1 = Placeholder[dtype=DT_FLOAT, shape=[3], _device=\"/job:localhost/replica:0/task:0/gpu:0\"]()]]\n\t [[Node: add_1/_1 = _Recv[client_terminated=false, recv_device=\"/job:localhost/replica:0/task:0/cpu:0\", send_device=\"/job:localhost/replica:0/task:0/gpu:0\", send_device_incarnation=1, tensor_name=\"edge_8_add_1\", tensor_type=DT_FLOAT, _device=\"/job:localhost/replica:0/task:0/cpu:0\"]()]]\n"
     ]
    }
   ],
   "source": [
    "# create a placeholder of type float 32-bit, shape is a vector of 3 elements\n",
    "a = tf.placeholder(tf.float32, shape=[3])\n",
    "# create a constant of type float 32-bit, shape is a vector of 3 elements\n",
    "b = tf.constant([5, 5, 5], tf.float32)\n",
    "# use the placeholder as you would a constant or a variable\n",
    "c = a + b # Short for tf.add(a, b)\n",
    "#If we try to fetch c, we will run into error.\n",
    "with tf.Session() as sess:\n",
    "    print(sess.run(c))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Sharing Variables\n",
    "\n",
    "To share variables, we can explicitly pass `tf.Variable` objects or implicitly wrapping `tf.Variable` objects with `tf.variable_scope` objects. Variable scopes not only allow us to share variables, they also make naming variables easier. Suppose we have multi-layered model, instead of coming up with different names for variables in different layers. We can use different scopes to distinguish them. We can use `tf.get_variable` to get an existing variable, if the variable does not exist, a new one is created and returned."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "with tf.variable_scope(\"foo\"):\n",
    "    v = tf.get_variable(\"v\", [1])  # v.name == \"foo/v:0\"\n",
    "    w = tf.get_variable(\"w\", [1])  # w.name == \"foo/w:0\"\n",
    "with tf.variable_scope(\"foo\", reuse=True):\n",
    "    v1 = tf.get_variable(\"v\")  # The same as v above."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# clear used variables in jupyter notebook\n",
    "%reset -fs "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#  Word2Vec\n",
    "Word2Vec is a computationally-efficient model that learns to embed words into vectors. The goal is to map words that have similar meanings close to each other.\n",
    "\n",
    "## Why represent words as vectors?\n",
    "When dealing with words, a straightforward way would be treating each word as discrete symbols. For instance, `cat` as `2` and `dog` as `1`. However, these symbols carry no information about the original word, making it impossible for us to infer the relationship between cats and dogs (both are four-legged animals and both are pets) based on the symbols alone. Hence, to successfully learn the relationship between them, we might need a large amount of training data.  \n",
    "\n",
    "On the other hand, **Vector space models (VSMs)** which represent words as vectors can help overcome these obstacles. This is based on a key observation that **semantically similar words are often used interchangeably in different contexts**. For example, the words `cat` and `dog` may both appear in a context \"\\_\\_\\_ is my favorate pet.\" When feeding `cat` and `dog` into the NN to predict their nearby words, these two words will be likely to share the same/similar hidden representation in order to predict the same/similar nearby words. \n",
    "\n",
    "## Skip-Gram and CBOW\n",
    "Word2Vec comes in two variants **Skip-Gram** and **CBOW (Continuous Bag-Of-Words)**. Algorithmically, these models are similar. CBOW predicts the target words using its neighborhood(context) whereas Skip-Gram does the inverse, which is to predict context words from the target words. For example, given the sentence `the quick brown fox jumped over the lazy dog`. Defining the context words as the word to the left and right of the target word, CBOW will be trained on the dataset: \n",
    "\n",
    "`([the, brown], quick), ([quick, fox], brown), ([brown, jumped], fox)...`  \n",
    "\n",
    "where CBOW tries to predict the target word `quick` from the context words in brackets `[the, brown]`, and predict `brown` from `[quick, fox]` and so on.\n",
    "However, with Skip-Gram, the dataset becomes  \n",
    "\n",
    "`(quick, the), (quick, brown), (brown, quick), (brown, fox), ...`  \n",
    "\n",
    "where Skip-Gram predicts the context word `the`, `brown` with the target word `quick`. Statistically, CBOW smoothes over a lot of the distributional information (by treating an entire context as one example). For the most part, this turns out to be a useful thing for smaller datasets. On the other hand, Skip-Gram treats each context-target pair as a new observation and is shown to be able to capture the semantics better when we have a large dataset.\n",
    "\n",
    "| <img src=\"files/Skip-gram.png\" width=\"350\"> | <img src=\"files/Cbow.png\" width=\"350\"> |\n",
    "|:---------------------------------------------:|:---------------------------------------------:|\n",
    "|                       CBOW                    |                       Skip-gram               |\n",
    "\n",
    "Note that the tasks described above are only used to train the neural network, we don’t use the neural network for the task we trained it on. What we want is the weights of the hidden layer, the \"embedding matrix\".  \n",
    "\n",
    "For the rest of the tutorial, we will focus on the Skip-Gram model.\n",
    "\n",
    "## Cost Function\n",
    "Like most neural networks, a Skip-Gram model is trained using the maximum likelihood(ML) principle:  \n",
    "$$  \\arg\\min_{\\Theta}\\sum_{i=1}^{N}{-\\log\\mathrm{P}(\\boldsymbol{y}^{(i)}\\,|\\,\\boldsymbol{x}^{(i)},\\Theta)} $$\n",
    "In a multiclass task where $y=1,\\cdots,V$($V$ being the vocabulary size) we usually assume\n",
    "\n",
    "$$\\Pr(y\\,|\\,\\boldsymbol{x})\\sim\\mathrm{Categorical}(y\\,|\\,\\boldsymbol{x};\\boldsymbol{\\rho})=\\prod_{i=1}^{V}\\rho_{i}^{1(y;\\,y=i)}.$$\n",
    "\n",
    "It is natural to use $V$ **Softmax units** in the output layer. That is, the activation  $a_i^{(L)}$ of each unit at the last layer(layer $L$) $z_i^{(L)}$ outputs one dimension of the softmax function, a generalization of the logistic sigmoid:\n",
    "\n",
    "\n",
    "$$a_i^{(L)}=\\rho_i=\\mathrm{softmax}(\\boldsymbol{z}^{(L)})_{i}=\\frac{\\exp(z_{i}^{(L)})}{\\sum_{j=1}^{{\\color{red}V}}\\exp(z_{j}^{(L)})}.$$\n",
    "\n",
    "The cost function then becomes:\n",
    "\n",
    "$$\\arg\\min_{\\Theta}\\sum_{i}-\\log\\prod_{j}\\left(\\frac{\\exp(z_{j}^{(L)})}{\\sum_{k=1}^{{\\color{red}V}}\\exp(z_{k}^{(L)})}\\right)^{1(y^{(i)};y^{(i)}=j)}=\\arg\\min_{\\Theta}\\sum_{i}-z_{y^{(i)}}^{(L)}+\\log\\sum_{k=1}^{{\\color{red}V}}\\exp(z_{k}^{(L)})$$\n",
    "\n",
    "Basically, we want to maximize $\\rho_j$ when seeing an example of class $j$. However, this objective introduces high training cost when $V$ is large. Recall from the lecture that, at every training step in SGD, we need to compute the gradient of the cost function with respect to $\\boldsymbol{z}^{(L)}$. This gradient involves the $z_{i}^{(L)}$ of **every unit** at the output layer, which in turn leads to a lot of weight updates in $\\boldsymbol{W}^{(1)}$ and $\\boldsymbol{W}^{(2)}$ at every training step. The training will be very slow. Next, we will introduce two ways to speed up the training process.\n",
    "### Sampled Softmax\n",
    "Suppose that we have a training sequence of $T$ training words $w_1,w_2,w_3,⋯,w_T$ that belong to a vocabulary $V$ whose size is $|V|$ and that our model uses context $c$ of size $n$. Assuming that each word input embedding $v_w$ (the \"id\"s each word is mapped to) of dimension $d$ and output embedding $v_{w}^{'}$ (the embedding generated by softmax output)\n",
    "\n",
    "\n",
    "Recall that the loss function is as follows:  \n",
    "$$C(\\theta) = -z_{y^{(i)}}^{(L)} + log \\sum_{k=1}^{V} exp(z_{k}^{(L)})$$\n",
    "\n",
    "Computing the gradient $\\nabla$ of $C(\\theta)$ with respect to the model's parameters $\\theta$,\n",
    "\n",
    "$$ \\nabla_{\\theta}C(\\theta) = \\nabla_{\\theta} (\\,-z_{y^{(i)}}^{(L)}\\,) + \\nabla_{\\theta} log \\sum_{k=1}^{V} exp(z_k^{(L)})  $$  \n",
    "\n",
    "Since the gradient of $logx$ is $\\frac{1}{x}$, the previous equation can be written as\n",
    "\n",
    "$$ \\nabla_{\\theta}C(\\theta) = \\nabla_{\\theta} (\\,-z_{y^{(i)}}^{(L)}\\,) + \\frac{1}{\\sum_{k=1}^{V} exp(z_k^{(L)})} \\nabla_{\\theta} \\sum_{j=1}^{V} exp(z_j^{(L)}) $$  \n",
    "\n",
    "Next, move the gradient into the sum\n",
    "\n",
    "$$ \\nabla_{\\theta}C(\\theta) = \\nabla_{\\theta} (\\,-z_{y^{(i)}}^{(L)}\\,) + \\frac{1}{\\sum_{k=1}^{V} exp(z_k^{(L)})} \\sum_{j=1}^{V} \\nabla_{\\theta} exp(z_j^{(L)}) $$  \n",
    "\n",
    "Since the gradient of the exponential function exp(x) is exp(x) itself and applying chain rule once more, the formula becomes\n",
    "\n",
    "$$  \\nabla_{\\theta}C(\\theta) = \\nabla_{\\theta} (\\,-z_{y^{(i)}}^{(L)}\\,) + \\frac{1}{\\sum_{k=1}^{V} exp(z_k^{(L)})} \\sum_{j=1}^{V} exp(z_j^{(L)}) \\nabla_{\\theta}(z_{j}^{(L)})  $$ \n",
    "\n",
    "Moving the $\\sum$ to the front, we have\n",
    "\n",
    "$$ \\nabla_{\\theta}C(\\theta) = - \\left[  \\nabla_{\\theta} (\\,z_{y^{(i)}}^{(L)}\\,) + \\sum_{j=1}^{V}  \\frac{exp(z_j^{(L)})} {\\sum_{k=1}^{V} exp(z_k^{(L)})} \\nabla_{\\theta}(-z_{j}^{(L)})\\right]$$\n",
    "\n",
    "\n",
    "Note that $\\frac{exp(\\,z_j^{(L)}\\,)} {\\sum_{k=1}^{V} \\, exp(\\,z_k^{(L)}\\,)}$  is the softmax probability $ P(z_{j}^{(L)}) $ of $z_{j}^{(L)}$.\n",
    "\n",
    "Replacing it and moving the negative sign to the front, we get\n",
    "\n",
    "$$ \\nabla_{\\theta}C(\\theta) = - \\left[ \\nabla_{\\theta} (\\,z_{y^{(i)}}^{(L)}\\,) +  \\sum_{j=1}^{V} P(z_j^{(L)}) \\nabla_{\\theta} (-z_j^{(L)}) \\right] $$\n",
    "\n",
    "where the first term is related to the target word, and the second term is related to all the other words in the vocabulary. Moreover, the second term is an expectation of $\\nabla_{\\theta} (-z_j^{(L)}))$ for all words in $V$. Rewritting the formula, we get\n",
    "\n",
    "$$ \\sum_{j=1}^{V} P(z_j^{(L)}) \\nabla_{\\theta} (-z_j^{(L)}) = \\mathop{\\mathbb{E}}_{z_j \\sim P} [ \\nabla_{\\theta}(-z_{j}^{(L)}) ] $$ \n",
    "\n",
    "and \n",
    "\n",
    "$$  \\nabla_{\\theta}C(\\theta) = - \\left[  \\nabla(\\,z_{y^{(i)}}^{(L)}\\,) + \\mathop{\\mathbb{E}}_{z_j \\sim P} [ \\nabla_{\\theta}(-z_{j}^{(L)}) ]   \\right]$$ \n",
    "\n",
    "Since we don't want to look at the whole vocabulary each time we compute the second term, we sample a small subset $V'$ from the whole vocabulary $V$ according to a predifined noise distribution $Q$, then the second term can be approximated as\n",
    "\n",
    "$$ \\mathop{\\mathbb{E}}_{z_j \\sim P} [ \\nabla_{\\theta}(-z_{j}^{(L)}) ] \\approx \\sum_{\\boldsymbol {x}_i \\in {\\color{red}V^{\\color{red}'}}} \\frac{exp(z_{j}^{(L)})-log(Q(\\boldsymbol {x}_i))}{ \\sum_{\\boldsymbol {x}_k \\in {\\color{red}V^{\\color{red}'}}} exp(z_{j}^{(L)})-log(Q(\\boldsymbol {x}_k))}$$ \n",
    "\n",
    "where $Q$ is taken as \n",
    "\n",
    "$$ Q(\\mathbf {x}_i) = \\begin{equation}\n",
    "\\left\\{\n",
    "\\begin{array}{rl}\n",
    "\\frac{1}{|V_{i}^{'}|} \\; if \\; \\boldsymbol {x}_i \\in V_{i}^{'}\\\\\n",
    "0, otherwise\n",
    "\\end{array}\n",
    "\\right.\n",
    "\\end{equation} $$\n",
    "\n",
    "\n",
    "\n",
    "### Noise Contrastive Estimation (NCE)\n",
    "Instead of estimating the probability of word $\\Pr(y\\,|\\,\\boldsymbol{x})$, we reduce the problem into a **binary classification** task, where the model tries to distinguish the target word $w_t$ from $k$ noise words $\\tilde{w_{ik}}$. An illustration for CBOW is shown below. For skip-gram the direction is simply inverted.\n",
    "<img src=\"files/nce-nplm.png\" width=\"350\">\n",
    "\n",
    "Using $\\boldsymbol{x}_j$ to denote the correct word given context $c_j$, and $\\tilde{\\boldsymbol{x}_{ij}}$ to denote the noise words. Our cost function using maximum likelihood principle look like:\n",
    "\n",
    "$$ C(\\theta) = - \\sum_{i=1}^{V} \\left[ logP(y=1\\; | \\;\\boldsymbol{x}_i,c_i) + k\\mathop{\\mathbb{E}}_{\\tilde{\\boldsymbol{x}_{ik}} \\sim Q} [ logP(y=0\\; | \\;\\tilde{\\boldsymbol{x}_{ik},c_i}) ] \\right]$$\n",
    "\n",
    "Since calculating the expectation of the noise words still require summing over the whole vocabulary, we estimate $ \\mathop{\\mathbb{E}}_{\\tilde{\\boldsymbol{x}_{jk}} \\sim Q} [ logP(y^{(i)}=0\\; | \\;\\tilde{\\boldsymbol{x}_{jk},c_j}) ] $ by taking the mean over $k$ \n",
    "\n",
    "$$ C(\\theta) = - \\sum_{i=1}^{V} \\left[ logP(y=1\\; | \\;\\boldsymbol{x}_i,c_i) + k \\sum_{j=1}^{k} \\frac{1}{k} logP(y=0\\; | \\;\\tilde{\\boldsymbol{x}_{jk},c_j})  \\right]$$\n",
    "\n",
    "Eliminating $k$ and $\\frac{1}{k}$\n",
    "\n",
    "$$ C(\\theta) = - \\sum_{i=1}^{V} \\left[ logP(y=1\\; | \\;\\boldsymbol{x}_i,c_i) +  \\sum_{j=1}^{k}  logP(y=0\\; | \\;\\tilde{\\boldsymbol{x}_{jk},c_j})  \\right]$$\n",
    "\n",
    "Since we are sampling from two distributions, the correct word is sampled from the true distribution $P$ according to the context $c$ and noise words are sampled from $Q$, the probability of sampling either a positive sample or a negative sample can be written as\n",
    "\n",
    "$$ P(y \\; | \\; \\boldsymbol{x}_i, c_i) = \\frac{1}{k+1}P(\\boldsymbol{x}\\;|\\;c) + \\frac{k}{k+1} Q(\\boldsymbol{x}) $$\n",
    "\n",
    "Hence\n",
    "\n",
    "$$ P(y=1\\;|\\; \\boldsymbol{x}_i, c_i) = \\frac{\\frac{1}{k+1}P(\\boldsymbol{x}\\;|\\;c)}{\\frac{1}{k+1}P(\\boldsymbol{x}\\;|\\;c) + \\frac{k}{k+1} Q(\\boldsymbol{x})} = \\frac{P(\\boldsymbol{x}\\;|\\;c)}{P(\\boldsymbol{x}\\;|\\;c) + kQ(\\boldsymbol{x})}$$\n",
    "\n",
    "and\n",
    "\n",
    "$$ P(y=0\\;|\\; \\boldsymbol{x}_i, c_i) = 1 - P(y=1\\;|\\; \\boldsymbol{x}_i, c_i)$$\n",
    "\n",
    "Note that calculating $P(\\boldsymbol{x}\\;|\\;c)$ requires summing over the whole vocabulary since\n",
    "\n",
    "$$P(\\boldsymbol{x}\\;|\\;c) = \\frac{exp(z_{i}^{(L)})}{\\sum_{k=1}^{V} exp(z_{k}^{(L)})}$$\n",
    "\n",
    "If we represent $\\sum_{k=1}^{V} exp(z_{k}^{(L)})$ as $Z(c)$, we have\n",
    "\n",
    "$$P(\\boldsymbol{x}\\;|\\;c) = \\frac{z_{i}^{(L)}}{Z(c)}$$\n",
    "\n",
    "The interesting thing is that in NCE, $Z(c)$ is treated as a hyperparameter, which can be set at 1 without affecting the model's performance. Letting $Z(c) = 1$, we have\n",
    "\n",
    "$$P(\\boldsymbol{x}\\;|\\;c) = exp(z_{i}^{(L)})$$\n",
    "\n",
    "$$ P(y=1\\;|\\; \\boldsymbol{x}_i, c_i) = \\frac{ exp(\\,z_{i}^{(L)}\\,) }{ exp(\\,z_{i}^{(L)}\\,) + kQ(\\boldsymbol{x}) }$$\n",
    "\n",
    "\n",
    "and the loss function is obtained\n",
    "\n",
    "$$ C(\\theta) = - \\sum_{i=1}^{V} [log\\frac{ exp(\\,z_{i}^{(L)}\\,) }{ exp(\\,z_{i}^{(L)}\\,) + kQ(\\boldsymbol{x})} + logP(1 - \\frac{ exp(\\,z_{i}^{(L)}\\,) }{ exp(\\,z_{i}^{(L)}\\,) + kQ(\\boldsymbol{x})} ] $$ \n",
    "\n",
    "It can be shown that as we increase the number of noise samples $k$, the NCE derivative tends towards the gradient of the softmax function.\n",
    "\n",
    "Intuitively, the distinction between sampled softmax and noise contrastive estimation is that sampled softmax is more about sampling from the given distribution in order to approximate the true softmax. On the other hand, noise contrastive estimation is more about selecting noise samples to mimic the true softmax. It only takes 1 true class and $k$ noise classes. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## The Dataset\n",
    "The dataset we use is text8, which is the first 100 MB of cleaned text of the English Wikipedia dump on Mar. 3, 2006. While 100MB is not enough to train really good embeddings, we can still see some interesting relations. Splitting the text by blank space, we can find that there are 17,005,207 tokens in total.\n",
    "\n",
    "### Preparing training data\n",
    "To generate batches for training, several functions defined below are used. First, we read the data into the memory and build the vocabulary using a number of most commonly seen words. Meanwhile, we build keep two dictionaries, a dictionary that translates words to indices and another which does the reverse. Then, for every word in the text selected as the center word, pair them with one of the context words. Finally, a python generator which generates a batch of pairs of center-target pairs."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "\"\"\"The content of process_data.py\"\"\"\n",
    "\n",
    "from collections import Counter\n",
    "import random\n",
    "import os\n",
    "import sys\n",
    "sys.path.append('..')\n",
    "import zipfile\n",
    "\n",
    "import numpy as np\n",
    "from six.moves import urllib\n",
    "import tensorflow as tf\n",
    "\n",
    "\n",
    "# Parameters for downloading data\n",
    "DOWNLOAD_URL = 'http://mattmahoney.net/dc/'\n",
    "EXPECTED_BYTES = 31344016\n",
    "DATA_FOLDER = 'data/'\n",
    "FILE_NAME = 'text8.zip'\n",
    "\n",
    "\n",
    "def make_dir(path):\n",
    "    \"\"\" Create a directory if there isn't one already. \"\"\"\n",
    "    try:\n",
    "        os.mkdir(path)\n",
    "    except OSError:\n",
    "    \tpass\n",
    "\n",
    "def download(file_name, expected_bytes):\n",
    "    \"\"\" Download the dataset text8 if it's not already downloaded \"\"\"\n",
    "    file_path = DATA_FOLDER + file_name\n",
    "    if os.path.exists(file_path):\n",
    "        print(\"Dataset ready\")\n",
    "        return file_path\n",
    "    file_name, _ = urllib.request.urlretrieve(DOWNLOAD_URL + file_name, file_path)\n",
    "    file_stat = os.stat(file_path)\n",
    "    if file_stat.st_size == expected_bytes:\n",
    "        print('Successfully downloaded the file', file_name)\n",
    "    else:\n",
    "        raise Exception(\n",
    "              'File ' + file_name +\n",
    "              ' might be corrupted. You should try downloading it with a browser.')\n",
    "    return file_path    \n",
    "    \n",
    "    \n",
    "def read_data(file_path):\n",
    "    \"\"\" Read data into a list of tokens\"\"\"\n",
    "    with zipfile.ZipFile(file_path) as f:\n",
    "        words = tf.compat.as_str(f.read(f.namelist()[0])).split()\n",
    "        # tf.compat.as_str() converts the input into the string\n",
    "    return words\n",
    "\n",
    "def build_vocab(words, vocab_size):\n",
    "    \"\"\" Build vocabulary of VOCAB_SIZE most frequent words \"\"\"\n",
    "    dictionary = dict()\n",
    "    count = [('UNK', -1)]\n",
    "    count.extend(Counter(words).most_common(vocab_size - 1))\n",
    "    index = 0\n",
    "    make_dir('processed')\n",
    "    with open('processed/vocab_1000.tsv', \"w\") as f:\n",
    "        for word, _ in count:\n",
    "            dictionary[word] = index\n",
    "            if index < 1000:\n",
    "                f.write(word + \"\\n\")\n",
    "            index += 1\n",
    "    index_dictionary = dict(zip(dictionary.values(), dictionary.keys()))\n",
    "    return dictionary, index_dictionary\n",
    "\n",
    "def convert_words_to_index(words, dictionary):\n",
    "    \"\"\" Replace each word in the dataset with its index in the dictionary \"\"\"\n",
    "    return [dictionary[word] if word in dictionary else 0 for word in words]\n",
    "\n",
    "def generate_sample(index_words, context_window_size):\n",
    "    \"\"\" Form training pairs according to the skip-gram model. \"\"\"\n",
    "    for index, center in enumerate(index_words):\n",
    "        context = random.randint(1, context_window_size)\n",
    "        # get a random target before the center word\n",
    "        for target in index_words[max(0, index - context): index]:\n",
    "            yield center, target\n",
    "        # get a random target after the center wrod\n",
    "        for target in index_words[index + 1: index + context + 1]:\n",
    "            yield center, target\n",
    "\n",
    "def get_batch(iterator, batch_size):\n",
    "    \"\"\" Group a numerical stream into batches and yield them as Numpy arrays. \"\"\"\n",
    "    while True:\n",
    "        center_batch = np.zeros(batch_size, dtype=np.int32)\n",
    "        target_batch = np.zeros([batch_size, 1])\n",
    "        for index in range(batch_size):\n",
    "            center_batch[index], target_batch[index] = next(iterator)\n",
    "        yield center_batch, target_batch\n",
    "        \n",
    "def get_batch_gen(index_words, context_window_size, batch_size):\n",
    "    \"\"\" Return a python generator that generates batches\"\"\"\n",
    "    single_gen = generate_sample(index_words, context_window_size)\n",
    "    batch_gen = get_batch(single_gen, batch_size)\n",
    "    return batch_gen\n",
    "        \n",
    "def process_data(vocab_size):\n",
    "    \"\"\" Read data, build vocabulary and dictionary\"\"\"\n",
    "    file_path = download(FILE_NAME, EXPECTED_BYTES)\n",
    "    words = read_data(file_path)\n",
    "    dictionary, index_dictionary = build_vocab(words, vocab_size)\n",
    "    index_words = convert_words_to_index(words, dictionary)\n",
    "    del words # to save memory\n",
    "    return index_words, dictionary, index_dictionary"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's check if the batch generated is correct in shape."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dataset ready\n",
      "(64,)\n",
      "(64, 1)\n"
     ]
    }
   ],
   "source": [
    "vocab_size = 10000\n",
    "window_sz = 5\n",
    "batch_sz = 64\n",
    "index_words, dictionary, index_dictionary = process_data(vocab_size)\n",
    "batch_gen = get_batch_gen(index_words, window_sz, batch_sz)\n",
    "X, y = next(batch_gen)\n",
    "\n",
    "print(X.shape)\n",
    "print(y.shape)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can print out the first 10 pairs of `X` and `y`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "( anarchism originated )\n",
      "( originated anarchism )\n",
      "( originated as )\n",
      "( originated a )\n",
      "( as originated )\n",
      "( as a )\n",
      "( a as )\n",
      "( a term )\n",
      "( term originated )\n",
      "( term as )\n"
     ]
    }
   ],
   "source": [
    "for i in range(10): # print out the pairs\n",
    "  data = index_dictionary[X[i]]\n",
    "  label = index_dictionary[y[i,0]]\n",
    "  print('(', data, label,')')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "anarchism originated as a term of abuse first used against "
     ]
    }
   ],
   "source": [
    "for i in range(10): # print out the first 10 words in the text\n",
    "  print(index_dictionary[index_words[i]], end=' ')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can check that `(center, target)` pairs are indeed correct."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Using the **Dataset** API\n",
    "\n",
    "The relatively new Dataset API in TensorFlow allows one to build complex input pipelines without handling queues and faster than `feed_dict`. We can construct, apply transformations and extract elements from the dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "BATCH_SIZE = 128\n",
    "dataset = tf.contrib.data.Dataset.from_tensor_slices((X, y))\n",
    "dataset = dataset.repeat()  # Repeat the input indefinitely.\n",
    "dataset = dataset.batch(BATCH_SIZE) # stack BATCH_SIZE elements into one\n",
    "iterator = dataset.make_one_shot_iterator() # iterator\n",
    "next_batch = iterator.get_next() # an operation that gives the next batch"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(128,)\n",
      "(128, 1)\n"
     ]
    }
   ],
   "source": [
    "with tf.Session() as sess:\n",
    "  data, label = sess.run(next_batch)\n",
    "  print(data.shape)\n",
    "  print(label.shape)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Building the model\n",
    "We will now focus on building the model. Let's briefly go through what we will do next.\n",
    "1. Define the inputs and outputs\n",
    "2. Define the weights\n",
    "3. Define the loss function\n",
    "4. Define the optimizer\n",
    "5. Evaluate our model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dataset ready\n",
      "INFO:tensorflow:Restoring parameters from checkpoints/skip-gram-149999\n",
      "feeding in new dataset\n",
      "Average loss at step 151999:   6.5\n",
      "Average loss at step 153999:   6.6\n"
     ]
    }
   ],
   "source": [
    "from __future__ import absolute_import # use absolute import instead of relative import\n",
    "\n",
    "# '/' for floating point division, '//' for integer division\n",
    "from __future__ import division  \n",
    "from __future__ import print_function  # use 'print' as a function\n",
    "\n",
    "import os\n",
    "\n",
    "import numpy as np\n",
    "import tensorflow as tf\n",
    "\n",
    "\n",
    "from process_data import make_dir, get_batch_gen, process_data\n",
    "\n",
    "class SkipGramModel:\n",
    "  \"\"\" Build the graph for word2vec model \"\"\"\n",
    "  def __init__(self, hparams=None):\n",
    "\n",
    "    if hparams is None:\n",
    "        self.hps = get_default_hparams()\n",
    "    else:\n",
    "        self.hps = hparams\n",
    "\n",
    "    # define a variable to record training progress\n",
    "    self.global_step = tf.Variable(0, dtype=tf.int32, trainable=False, name='global_step')\n",
    "    \n",
    "\n",
    "  def _create_input(self):\n",
    "    \"\"\" Step 1: define input and output \"\"\"\n",
    "\n",
    "    with tf.name_scope(\"data\"):\n",
    "      self.centers = tf.placeholder(tf.int32, [self.hps.num_pairs], name='centers')\n",
    "      self.targets = tf.placeholder(tf.int32, [self.hps.num_pairs, 1], name='targets')\n",
    "      dataset = tf.contrib.data.Dataset.from_tensor_slices((self.centers, self.targets))\n",
    "      dataset = dataset.repeat() # # Repeat the input indefinitely\n",
    "      dataset = dataset.batch(self.hps.batch_size)\n",
    "      \n",
    "        \n",
    "      self.iterator = dataset.make_initializable_iterator()  # create iterator\n",
    "      self.center_words, self.target_words = self.iterator.get_next()\n",
    "\n",
    "  def _create_embedding(self):\n",
    "    \"\"\" Step 2: define weights. \n",
    "        In word2vec, it's actually the weights that we care about\n",
    "    \"\"\"\n",
    "    with tf.device('/gpu:0'):\n",
    "      with tf.name_scope(\"embed\"):\n",
    "        self.embed_matrix = tf.Variable(\n",
    "                              tf.random_uniform([self.hps.vocab_size,\n",
    "                                                 self.hps.embed_size], -1.0, 1.0),\n",
    "                                                 name='embed_matrix')\n",
    "\n",
    "  def _create_loss(self):\n",
    "    \"\"\" Step 3 + 4: define the model + the loss function \"\"\"\n",
    "    with tf.device('/cpu:0'):\n",
    "      with tf.name_scope(\"loss\"):\n",
    "        # Step 3: define the inference\n",
    "        embed = tf.nn.embedding_lookup(self.embed_matrix, self.center_words, name='embed')\n",
    "\n",
    "\n",
    "        # Step 4: define loss function\n",
    "        # construct variables for NCE loss\n",
    "        nce_weight = tf.Variable(\n",
    "                        tf.truncated_normal([self.hps.vocab_size, self.hps.embed_size],\n",
    "                                            stddev=1.0 / (self.hps.embed_size ** 0.5)),\n",
    "                                            name='nce_weight')\n",
    "        nce_bias = tf.Variable(tf.zeros([self.hps.vocab_size]), name='nce_bias')\n",
    "\n",
    "        # define loss function to be NCE loss function\n",
    "        self.loss = tf.reduce_mean(tf.nn.nce_loss(weights=nce_weight,\n",
    "                                                  biases=nce_bias,\n",
    "                                                  labels=self.target_words,\n",
    "                                                  inputs=embed,\n",
    "                                                  num_sampled=self.hps.num_sampled,\n",
    "                                                  num_classes=self.hps.vocab_size), name='loss')\n",
    "  def _create_optimizer(self):\n",
    "    \"\"\" Step 5: define optimizer \"\"\"\n",
    "    with tf.device('/gpu:0'):\n",
    "      self.optimizer = tf.train.AdamOptimizer(self.hps.lr).minimize(self.loss,\n",
    "                                                         global_step=self.global_step)\n",
    "  \n",
    "  def _build_nearby_graph(self):\n",
    "    # Nodes for computing neighbors for a given word according to\n",
    "    # their cosine distance.\n",
    "    self.nearby_word = tf.placeholder(dtype=tf.int32)  # word id\n",
    "    nemb = tf.nn.l2_normalize(self.embed_matrix, 1)\n",
    "    nearby_emb = tf.gather(nemb, self.nearby_word)\n",
    "    nearby_dist = tf.matmul(nearby_emb, nemb, transpose_b=True)\n",
    "    self.nearby_val, self.nearby_idx = tf.nn.top_k(nearby_dist,\n",
    "                                         min(1000, self.hps.vocab_size))\n",
    "    \n",
    "\n",
    "  def _build_eval_graph(self):\n",
    "    \"\"\"Build the eval graph.\"\"\"\n",
    "    # Eval graph\n",
    "\n",
    "    # Each analogy task is to predict the 4th word (d) given three\n",
    "    # words: a, b, c.  E.g., a=italy, b=rome, c=france, we should\n",
    "    # predict d=paris.\n",
    "\n",
    "    # The eval feeds three vectors of word ids for a, b, c, each of\n",
    "    # which is of size N, where N is the number of analogies we want to\n",
    "    # evaluate in one batch.\n",
    "    self.analogy_a = tf.placeholder(dtype=tf.int32)  # [N]\n",
    "    self.analogy_b = tf.placeholder(dtype=tf.int32)  # [N]\n",
    "    self.analogy_c = tf.placeholder(dtype=tf.int32)  # [N]\n",
    "\n",
    "    # Normalized word embeddings of shape [vocab_size, emb_dim].\n",
    "    nemb = tf.nn.l2_normalize(self.embed_matrix, 1)\n",
    "\n",
    "    # Each row of a_emb, b_emb, c_emb is a word's embedding vector.\n",
    "    # They all have the shape [N, emb_dim]\n",
    "    a_emb = tf.gather(nemb, self.analogy_a)  # a's embs\n",
    "    b_emb = tf.gather(nemb, self.analogy_b)  # b's embs\n",
    "    c_emb = tf.gather(nemb, self.analogy_c)  # c's embs\n",
    "\n",
    "    # We expect that d's embedding vectors on the unit hyper-sphere is\n",
    "    # near: c_emb + (b_emb - a_emb), which has the shape [N, emb_dim].\n",
    "    target = c_emb + (b_emb - a_emb)\n",
    "\n",
    "    # Compute cosine distance between each pair of target and vocab.\n",
    "    # dist has shape [N, vocab_size].\n",
    "    dist = tf.matmul(target, nemb, transpose_b=True)\n",
    "\n",
    "    # For each question (row in dist), find the top 20 words.\n",
    "    _, self.pred_idx = tf.nn.top_k(dist, 20)\n",
    "\n",
    "  def predict(self, sess, analogy):\n",
    "    \"\"\" Predict the top 20 answers for analogy questions \"\"\"\n",
    "    idx, = sess.run([self.pred_idx], {\n",
    "        self.analogy_a: analogy[:, 0],\n",
    "        self.analogy_b: analogy[:, 1],\n",
    "        self.analogy_c: analogy[:, 2]\n",
    "    })\n",
    "    return idx\n",
    "\n",
    "  def _create_summaries(self):\n",
    "    with tf.name_scope(\"summaries\"):\n",
    "      tf.summary.scalar(\"loss\", self.loss)\n",
    "      tf.summary.histogram(\"histogram_loss\", self.loss)\n",
    "      # because you have several summaries, we should merge them all\n",
    "      # into one op to make it easier to manage\n",
    "      self.summary_op = tf.summary.merge_all()\n",
    "\n",
    "\n",
    "  def build_graph(self):\n",
    "    \"\"\" Build the graph for our model \"\"\"\n",
    "    self._create_input()\n",
    "    self._create_embedding()\n",
    "    self._create_loss()\n",
    "    self._create_optimizer()\n",
    "    self._build_eval_graph()\n",
    "    self._build_nearby_graph()\n",
    "    self._create_summaries()\n",
    "\n",
    "\n",
    "\n",
    "def train_model(sess, model, batch_gen, index_words, num_train_steps):\n",
    "  saver = tf.train.Saver()\n",
    "  # defaults to saving all variables - in this case embed_matrix, nce_weight, nce_bias\n",
    "\n",
    "  initial_step = 0\n",
    "  make_dir('checkpoints') # directory to store checkpoints\n",
    "\n",
    "\n",
    "  \n",
    "  sess.run(tf.global_variables_initializer()) # initialize all variables\n",
    "  ckpt = tf.train.get_checkpoint_state(os.path.dirname('checkpoints/checkpoint'))\n",
    "  # if that checkpoint exists, restore from checkpoint\n",
    "  if ckpt and ckpt.model_checkpoint_path:\n",
    "      saver.restore(sess, ckpt.model_checkpoint_path)\n",
    "\n",
    "  total_loss = 0.0 # use this to calculate late average loss in the last SKIP_STEP steps\n",
    "  writer = tf.summary.FileWriter('graph/lr' + str(model.hps.lr), sess.graph)\n",
    "  initial_step = model.global_step.eval()\n",
    "  for index in range(initial_step, initial_step + num_train_steps):\n",
    "    # feed in new dataset  \n",
    "    if index % model.hps.new_dataset_every == 0:\n",
    "      try:\n",
    "          centers, targets = next(batch_gen)\n",
    "      except StopIteration: # generator has nothing left to generate\n",
    "          batch_gen = get_batch_gen(index_words, \n",
    "                                    model.hps.skip_window, \n",
    "                                    model.hps.num_pairs)\n",
    "          centers, targets = next(batch_gen)\n",
    "          print('Finished looking at the whole text')\n",
    "            \n",
    "      feed = {\n",
    "          model.centers: centers,\n",
    "          model.targets: targets\n",
    "      }\n",
    "      _ = sess.run(model.iterator.initializer, feed_dict = feed)\n",
    "      print('feeding in new dataset')\n",
    "      \n",
    "      \n",
    "    loss_batch, _, summary = sess.run([model.loss, model.optimizer, model.summary_op])\n",
    "    writer.add_summary(summary, global_step=index)\n",
    "    total_loss += loss_batch\n",
    "    if (index + 1) % model.hps.skip_step == 0:\n",
    "        print('Average loss at step {}: {:5.1f}'.format(\n",
    "                                                  index,\n",
    "                                                  total_loss/model.hps.skip_step))\n",
    "        total_loss = 0.0\n",
    "        saver.save(sess, 'checkpoints/skip-gram', index)\n",
    "\n",
    "\n",
    "def get_default_hparams():\n",
    "    hparams = tf.contrib.training.HParams(\n",
    "        num_pairs = 10**6,                # number of (center, target) pairs \n",
    "                                          # in each dataset instance\n",
    "        vocab_size = 10000,\n",
    "        batch_size = 128,\n",
    "        embed_size = 300,                 # dimension of the word embedding vectors\n",
    "        skip_window = 3,                  # the context window\n",
    "        num_sampled = 100,                # number of negative examples to sample\n",
    "        lr = 0.005,                       # learning rate\n",
    "        new_dataset_every = 10**4,        # replace the original dataset every ? steps\n",
    "        num_train_steps = 2*10**5,        # number of training steps for each feed of dataset\n",
    "        skip_step = 2000\n",
    "    )\n",
    "    return hparams\n",
    "\n",
    "def main():\n",
    "\n",
    "  hps = get_default_hparams()\n",
    "  index_words, dictionary, index_dictionary = process_data(hps.vocab_size)\n",
    "  batch_gen = get_batch_gen(index_words, hps.skip_window, hps.num_pairs)\n",
    "                                                          \n",
    "  model = SkipGramModel(hparams = hps)\n",
    "  model.build_graph()\n",
    "  \n",
    "  \n",
    "  with tf.Session() as sess:\n",
    "    \n",
    "    # feed the model with dataset\n",
    "    centers, targets = next(batch_gen)\n",
    "    feed = {\n",
    "        model.centers: centers,\n",
    "        model.targets: targets\n",
    "    }\n",
    "    sess.run(model.iterator.initializer, feed_dict = feed) # initialize the iterator\n",
    "\n",
    "    train_model(sess, model, batch_gen, index_words, hps.num_train_steps)\n",
    "      \n",
    "if __name__ == '__main__':\n",
    "  main()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Evaluation\n",
    "\n",
    "A simple way to evaluate our embedding is to directly use them to predict relationships like `king is to queen as father is to ?`.  The model will be given the first three words and try to come up with the fourth. Suppose we have a line `Italy, Rome, France, Paris`, we try to use `Italy, Rome, France` to predict `Paris`. We would expect \n",
    "\n",
    "$ \\vec{Paris} - \\vec{France} \\approx \\vec{Rome} - \\vec{Italy} $  \n",
    "\n",
    "Therefore, the embedding vector of Paris can be calculated as\n",
    "\n",
    "$ \\vec{Paris}  \\approx \\vec{France} + \\vec{Rome} - \\vec{Italy} $\n",
    "\n",
    "We calculate the vector $\\vec{France} + \\vec{Rome} - \\vec{Italy}$ as previously described, and find the top-K words with the highest cosine similarity, we expect `Paris` would be one of them."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dataset ready\n",
      "INFO:tensorflow:Restoring parameters from checkpoints/skip-gram-2941999\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "import tensorflow as tf\n",
    "from process_data import process_data\n",
    "from train import get_default_hparams, SkipGramModel\n",
    "\n",
    "#Clears the default graph stack and resets the global default graph\n",
    "tf.reset_default_graph() \n",
    "hps = get_default_hparams()\n",
    "# get dictionary \n",
    "index_words, dictionary, index_dictionary = process_data(hps.vocab_size)\n",
    "\n",
    "# build model\n",
    "model = SkipGramModel(hps)\n",
    "model.build_graph()\n",
    "\n",
    "# initialize variables and restore checkpoint\n",
    "sess = tf.InteractiveSession()\n",
    "sess.run(tf.global_variables_initializer())\n",
    "saver = tf.train.Saver()\n",
    "ckpt = tf.train.get_checkpoint_state(os.path.dirname('checkpoints/checkpoint'))\n",
    "saver.restore(sess, ckpt.model_checkpoint_path)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To see the results, we can define a function that finds the nearest words."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "\n",
    "def nearby(words, model, sess, dictionary, index_dictionary, num=20):\n",
    "    \"\"\"Prints out nearby words given a list of words.\"\"\"\n",
    "    ids = np.array([dictionary.get(x, 0) for x in words])\n",
    "    vals, idx = sess.run(\n",
    "        [model.nearby_val, model.nearby_idx], {model.nearby_word: ids})\n",
    "    for i in range(len(words)):\n",
    "      print(\"\\n%s\\n=====================================\" % (words[i]))\n",
    "      for (neighbor, distance) in zip(idx[i, :num], vals[i, :num]):\n",
    "        print(\"%-20s %6.4f\" % (index_dictionary.get(neighbor), distance))\n",
    "        \n",
    "def analogy(line, model, sess, dictionary, index_dictionary):\n",
    "  \"\"\" Prints the top k anologies for a given array which contain 3 words\"\"\"\n",
    "  analogy = np.array([dictionary.get(w, 0) for w in line])[np.newaxis,:]\n",
    "  idx = model.predict(sess, analogy)\n",
    "  print(line)\n",
    "  for i in idx[0]:\n",
    "    print(index_dictionary[i])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "machine\n",
      "=====================================\n",
      "machine              1.0000\n",
      "bodies               0.5703\n",
      "model                0.5123\n",
      "engine               0.4834\n",
      "william              0.4792\n",
      "computer             0.4529\n",
      "simple               0.4367\n",
      "software             0.4325\n",
      "device               0.4310\n",
      "carrier              0.4296\n",
      "designed             0.4245\n",
      "using                0.4191\n",
      "models               0.4178\n",
      "gun                  0.4157\n",
      "performance          0.4151\n",
      "review               0.4129\n",
      "disk                 0.4082\n",
      "arrived              0.4021\n",
      "devices              0.4017\n",
      "process              0.4009\n",
      "\n",
      "learning\n",
      "=====================================\n",
      "learning             1.0000\n",
      "knowledge            0.3951\n",
      "instruction          0.3692\n",
      "communication        0.3666\n",
      "reflected            0.3665\n",
      "study                0.3646\n",
      "gospel               0.3637\n",
      "concepts             0.3628\n",
      "mathematics          0.3597\n",
      "cartoon              0.3582\n",
      "context              0.3555\n",
      "dialect              0.3494\n",
      "ching                0.3422\n",
      "tin                  0.3421\n",
      "gilbert              0.3416\n",
      "botswana             0.3389\n",
      "settlement           0.3388\n",
      "analysis             0.3386\n",
      "management           0.3374\n",
      "describing           0.3368\n"
     ]
    }
   ],
   "source": [
    "words = ['machine', 'learning']\n",
    "nearby(words, model, sess, dictionary, index_dictionary)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['london', 'england', 'berlin']\n",
      "berlin\n",
      "england\n",
      "predecessor\n",
      "elevator\n",
      "gr\n",
      "germany\n",
      "ss\n",
      "presidents\n",
      "link\n",
      "arose\n",
      "cologne\n",
      "correspond\n",
      "liturgical\n",
      "pioneered\n",
      "paris\n",
      "strikes\n",
      "icons\n",
      "turing\n",
      "scotland\n",
      "companion\n"
     ]
    }
   ],
   "source": [
    "analogy(['london', 'england', 'berlin'], model, sess, dictionary, index_dictionary)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Visualizing with t-SNE\n",
    "\n",
    "**t-distributed stochastic neighbor embedding (t-SNE)** is a dimension reduction technique, which we will not go through today. For more details, please visit the [Wikipedia page](https://en.wikipedia.org/wiki/T-distributed_stochastic_neighbor_embedding)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\nSw8++KCio6M1btw4hYSEaMCAASXW+P333ystLU2NGze2Gh8zZoxyc3O1Z88ehYSE6MqVKxo1apSe\nfvppffDBB4qNjVVUVNTvfo8AAKjsaFEIAAAAAIANTZgwQR999JGGDh2q//mf/1HDhg1LPO/jjz9W\n3759lZOTo2nTpmn06NFau3atpkyZctu5p06dqoSEBA0bNkxz5syRg4ODYmJitHv3bkmSn5+fEhIS\nJEkdO3ZUQkKC5QXYQnx8vAzD0LJly+Tq6qr3339fLi4uCgkJ0UcffSRJcnAo/DiroKBA69atk7u7\nu/r27SsPDw916NBBGzdu1JQpU+Tg4KD169dryJAhcnV1VX5+vqTCAOqf//ynDMNQ9erV1bp1a3l4\neOjo0aPasmWLDMPQpk2brOr6+OOPFRYWpqpVq6pRo0aSpFatWhULtwzD0Ndff6327dtrxIgR8vDw\nUM+ePWUYhl555RVJ0vr168v0PQQAoLJgBRcAAAAAADZ07do17d+//9+2JczPz9fLL78sPz8//etf\n/5K3t7ck6cUXX1RISMhtr8vNzdW+fftUpUoVSdKf//xnBQcHa9GiRerQoYPc3d01YMAADRw4UMHB\nwbddqQLcbz/99JNcXFw0cuRISdK7776rfv366fr165aVinPmzNH169dVrVo1TZ06VVJhQBYdHa1l\ny5YpICBAx48f19NPP21ZISlJwcHB+vDDD+Xg4KCLFy9q//798vHxUWZmpnbs2CHDMNS+fXtLLa++\n+qpmzpyp7t27a8aMGbp48aL++te/at++fVq8eLGlxlvt3btXo0aNsqyWlKTGjRvLwcFBx48fL6u3\nDQCASoUVXAAAAAAA2EBRm7XMzEx5e3urQYMGVi0C8/PzZRiG4uLilJqaql9//VUxMTHy9vZWXFyc\nDMNQRkaGhg8fLklauXKlDMNQZmamVq5cKUk6dOiQnnrqKZ05c0aS9Nlnn8kwDH388cdq1KiRNm7c\nWKyuJUuWqGvXrqpVq5aqVKmigIAADRgwoFi7RKlwtUpMTIz27NmjTp06yd3dXT4+Pnr++ed19erV\n0n7LUMmEhIRo8uTJmjx5svbu3auHH35YL7/8sq5du6aLFy9qxowZkqTHH3/c6rzg4GCNHz/e0mYz\nMjJSUmFoJkmOjo7asWOHevTooapVq2r79u2SCtty7tixQ02bNpWvr68k6fTp05o5c6amTJmiLVu2\naOzYsRoyZIgkqWHDhpoyZYquXLlSrPannnpK8+fP19ChQzV06NCyfaMAAKikCLgAAAAAALCBTz75\nRJLUq1evEtsH3qrog/mS2hf+dqx79+7KycmRJPXo0UObN29W7969NXfuXM2dO1c1a9aUt7e38vLy\n9Oc//9kyd5F58+bJ19dXL730khYvXqynnnpK69ev16OPPqrMzMxi9z9w4IB69OihRx55RPPnz1fX\nrl21atUqvfzyy/f2xgCSatSooaNHjyo3N1eS5OnpqeHDh+vixYtKTk7W1q1blZOTIxcXFx05csRy\nXbVq1fTSSy/p6tWrOn36tIKDg1WrVi01aNDA8m+9aH+sbt26qVOnTpaAKz8/XwcOHFBkZKRlf660\ntDQZhqHBgwcrIyNDGRkZunDhgqTC770rV65oz549xeov+h681Q8//KCCggIFBweX7psFAEAlRYtC\nAAAAAABs4MaNG5KkQYMGKTw83Kp94O/Rpk0bPfLIIxoyZIhGjRqlhx9+WAsWLNAvv/yi7777Tr16\n9VJ6ero2bNigFi1aaPny5VbXf/vtt3J3d7ca69Wrlzp37qxVq1Zp0qRJVsfS0tK0Z88etW3bVpI0\nbNgwXb58We+++67mz58vDw+P3/U8qJy6du2q1atX67XXXrOs1GrSpIkk6dixY8rOzpYkdejQQTt2\n7NAXX3yh7t27S5KaNm0qqXBFVu/evSUVruJatmyZJCk1NVXXr19XZGSkcnNz9eqrr8rPz0+XLl1S\nQUGBIiMjLf9uT58+LdM0Lftu3erTTz+VJJ09e9Zq3MfHR5s2bdJ3332nZs2aWWqZNWuWJFlqAgAA\nvw8ruAAAAAAAsIGoqCirr4tWmRw9erTYuUFBQZKkw4cPFzv227GxY8dafd2xY0dJhUFatWrVLOMh\nISGqVq1asfsVhVsFBQXKyspSRkaGWrRoIU9PT+3du7fY/du3b28Jt4pERkYqPz+/xLaGwJ3o0aOH\nOnbsqNdee03du3fX/Pnz9fnnn0uSVQj83HPPyc/PT9HR0Xr55Ze1ZMkSzZw5U5JUp04dyx5YkZGR\nlpaFX3/9tWrWrKlGjRopMjJSOTk5ys3N1aVLl+To6KhOnTrJx8dH9erV0+nTpyVJ//Vf/6W//vWv\n2rp1qxISEiRJAwcO1NatW9W5c2er2tu1a6cqVaqoY8eOevXVV7Vo0SI9/vjj+uijj9S/f/9i3/sA\nAODeEHABAAAAAGADfn5+xcZ8fHxKbAMYGhqqgIAAxcfH6+LFi5bx7OxsLV261Orc37Y/8/b2llT4\nYf9veXt7KzMzUx4eHpa2azt27FB4eLjc3d3l5eUlPz8/+fn5KSsry+ret7tf0XNIKvFZgDvx448/\nKjExUa+99ppOnjypqVOn6r333pNUGA4X/bvLyMjQ3r171bdvX73//vsaO3asvv32W0nSjBkz5ORU\n2LwoIiLCMvfu3bst+3KFhITI19fXsq9Xq1at5OXlJUlas2aN5d/yG2+8oVWrVqlz584KCwuTVPhv\nv3PnzgoICLCq3dfXV19//bU6deqkJUuWaPz48Tpx4oRmz55teQYAAPD7EXABAAAAAGADDg4l/0he\ntMrkVk5OTpo3b57OnTunNm3aaOfOnZKkPn36qHr16lbnOjo6ljjv7cZN01S7du20bds2jRo1Sp07\nd9aRI0f0xhtvaOPGjUpMTNTWrVvl4+OjgoKCO573ds8C3Im3335bubm5euWVV/T999/r7Nmz8vf3\nl5eXl+bOnasuXbrI3d1db731lnx9fZWQkKBz584pMzNT3t7e8vDwUI8ePSzz+fr6KiQkRPXr19d3\n331nCbgMw1BERIRq1qypa9euWcalwnafGzdulCRFR0fr2LFjkgpXVJqmqbi4uGLtCYu0aNFCGzZs\n0IULF5Sbm6tDhw5p0qRJxb5f4uLiZJqmZZUmAAC4c+zBBQAAAABAOVT0QXjRyqr+/fvL2dlZM2bM\n0JdffilJ6tatmyIiItSnTx/LSpV7sWTJEo0cOVIrVqyQaZo6ffq0xowZYzmenZ1d4uotoKz4+vqq\nbdu2GjJkiCTp3Xff1c8//6yVK1fKzc1Nbm5umjNnjkaOHKm2bdsqJiZGkhQfH68ff/xRy5Ytk6en\np9WckZGRWrhwoeXvt46vXbu22LgkPfLII4qLi1NcXJxatmypvn37qmbNmjp9+rRSU1P1+eefKy8v\nr6zeBgAA8G+wggsAAAAAABvo3r27TNNUeHh4sWPJyck6ceKEatSooR07dlhWQvXt21cbNmyQi4uL\nJOnll1/W8ePHJf3f3lmSFBMT82/n/u3eWPXr11diYqJGjx4tSZaVKkVef/31EldvAWVl9uzZevrp\np7V48WL993//t5ydnbVmzRo999xzlnNGjBihdevWycvLS9OnT9f06dPl5eWl9evX64UXXig2Z1F4\nFRwcrMDAQMt40Z5Yzs7Olj3rbjVt2jRt3rxZNWvW1MKFCzVy5EgtX75cubm5evPNN0v70QEAwB1i\nBRcAAAAAAOXUqFGj9Oqrr+rxxx9Xjx49dObMGS1fvlzNmjXTvn37lJ2drcWLF8vHx6dYq8J70bt3\nby1YsEBPPPGEXnjhBVWpUkVbt25VWlqafH19S+GJgDvj5ORkCa3+nd69e6t37953NGfPnj1LbJtZ\nv379/9hO849//KP++Mc//sd70JYTAID7h4ALAAAAAIByavLkycrKylJCQoJ27NghwzDUs2dP5ebm\nSpIef/xxnTx5Um+//bb++c9//u77dejQQZ988olmzJihv/zlL3rggQfUuXNnffnll3rsscd+9/wA\nAABAaTHK02+WhIaGmikpKbYuAwAAAACAciczM1OjRo3S7t27de7cOTk5Oal58+YaN26cnnrqKVuX\nB5SK+Ph4DRkyRElJSSW22AQAABWbYRippmmG3sm5rOACAAAAAMAO+Pj46MMPP7R1GcA9ObL3jPZs\nPKarF3LlUd1F7Z+sqwZta9i6LAAAYMdYwQUAAAAAAIAyc2TvGSWt+UH5eQWWMacqDop4thEhFwAA\nsHI3K7gcyroYAAAAAAAAVF57Nh6zCrckKT+vQHs2HrNRRQAAoCKgRSEAAAAAAL/ToV1J2vXRe7qS\nmaGqPr7q+MwgNe4YYeuyAJs7sveMrl7ILfHY7cYBAADuBAEXAAAAAAC/w6FdSUpcvkj5eYUf1l/J\nOK/E5YskiZALlVpRa8Lb8ajuch+rAQAAFQ0tCgEAAAAA+B12vhdvCbeK5OflatdH79moIqB8KKk1\nYRGnKg5q/2Td+1wRAACoSAi4AAAAAAC4R9n7z+nq5cwSj13JzLjP1QDly79rQRjxbCM1aFvjPlYD\nAAAqGgIuAAAAAADu0eX/ly43x2olHqvq43ufqwHKl9u1IPSo7kK4BQAAfjcCLgAAAAAA7tHNS7kK\n8X5Mjob1FteOhpM6PjPIRlUB5UP7J+vKqYr1R0+0JgQAAKXF6T+fAgAAAAAASuLo5aJANZUkpV3c\nqZybl+XmWE0takepcccIG1cH2FbRKq09G4/p6oVceVR3Ufsn67J6CwAAlAoCLgAAAAAA7lG1bkG6\ntO6oAqs2VWDVwqDLcHaQV5/6Nq4MKB8atK1BoAUAAMoEARcAAAAAAPfIvZW/pMK9uG5eypWjl4uq\ndQuyjAMAAAAoGwRcAAAAAAD8Du6t/Am0AAAAgPvM4T+fAgAAAAAAAAAAAJQfBFwAAAAAAAAAAACw\nKwRcAAAAAAAAAAAAsCsEXAAAAAAAAAAAALArBFwAAAAAAAAAAACwKwRcAAAAAAAAAAAAsCsEXAAA\nAAAAAAAAALArBFwAAAAAAAAAAACwKwRcAAAAAAAAAAAAsCsEXAAAAAAAAAAAALArBFwAAAAAAAAA\nAACwKwRcAAAAAAAAAAAAsCsEXAAAAAAAAAAAALArBFwAAAAAAAAAAACwKwRcAAAAAAAAAAAAsCsE\nXAAAAAAAAAAAALArBFwAAAAAAAAAAACwKwRcAAAAAAAAAAAAsCsEXAAAAAAAAAAAALArBFwAAAAA\nAAAAAACwKwRcAAAAAAAAAAAAsCsEXAAAAAAAAAAAALArBFwAAAAAAAAAAACwKwRcAAAAAAAAAAAA\nsCsEXAAAAAAAAAAAALArBFwAAAAAAAAAAACwKwRcAAAAAAAAAAAAsCsEXAAAAAAAAAAAALArBFwA\nAAAAAAAAAACwKwRcAAAAAAAAAAAAsCsEXAAAAAAAAAAAALArBFwAAAAAAAAAAACwKwRcAAAAAAAA\nAAAAsCsEXAAAAAAAAAAAALArBFwAAAAAAAAAAACwKwRcAAAAAAAAAAAAsCsEXAAAAAAAAAAAALAr\nBFwAAAAAAAAAAACwKwRcAAAAAAAAAAAAsCsEXAAAAAAAAAAAALArpRJwGYbxjmEY5wzD+O6WsTjD\nMH4xDOPA/76eKI17AQAAAAAAAAAAoHIrrRVc8ZK6lzC+wDTNlv/7+ryU7gUAAAAAAAAAAIBKrFQC\nLtM0d0q6UBpzAQAAAAAAAAAAAP9OWe/BNdowjLT/bWHoXcb3AgAAAAAAAAAAQCVQlgHX25KCJbWU\ndFrS30o6yTCMFwzDSDEMI+X8+fNlWA4AAAAAAAAAAAAqgjILuEzTPGua5k3TNAskrZDU5jbnLTdN\nM9Q0zVA/P7+yKgcAAAAAAAAAAAAVRJkFXIZhBNzyZW9J35XVvQAAAAAAAAAAAFB5OJXGJIZhfCgp\nXJKvYRinJE2TFG4YRktJpqR0ScNK414AAAAAAAAAAACo3EplBZdpmv1M0wwwTdPZNM3apmmuMk1z\noGmazU3TDDFNs5dpmqdL414AAAAAAAD2JD4+XoZhKDk52dalAAAAVBhl1qIQAAAAAAAAAAAAKAsE\n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\ntIgNGzbw3HPPlevv9OnTeHl53a30q7233nqLgoICXnvtNRwcHIiPjyciIoImTZqYC4sVmTNnDpMm\nTeKhhx5i9uzZXLp0iblz5/7uZz9o0CBq1KhBVFQUxcXFzJ8/n969e/Pjjz9arKoUEakqVOASERER\nERERERGrs7W15dNPP2X06NEsWLAAe3t7evTowc6dOy0e5IeHh5OQkMCqVas4c+YMtWvXpmXLlmzY\nsIFnn3220vIxGAx8/PHHTJkyhb/+9a98/vnnBAYG8vHHH7N06VIyMjIqbayqLj4+nscff5zg4GAG\nDhxIu3btKC0tJTMzk02bNjFw4EBiYmIAmDlzJnv27KFfv37069ePoKAg7O3t+emnn0hKSqJ9+/Yk\nJCRYdT7VSVFREd988w329vYAPPfcc/j5+bFw4cJrFrjy8vKIiYkhMDCQPXv2YDQaARgyZAgBAQHX\nHMvDw4PExETzeV5du3blkUceYenSpcyePbuSZyYicvtU4BIRERERERERkSqhWbNmbNmypVz82LFj\n5p/79u1L3759r9tXTEyMuejye7GKxijj7OzM/PnzmT9/vkX8zTffpGHDhtfN4V7RoEED9u3bx5w5\nc9i0aRNr167FaDTSoEEDwsLC6Nevn7mti4sLe/bs4d1332X9+vVs2rQJOzs76tevz+OPP86QIUOs\nOJPqZ8SIEebiFkC9evVo1qzZ7xZYt23bRmFhIcOHDzcXtwC8vb3p378/8fHxFd43ZswYc3EL4OGH\nH6ZmzZr3VTFXRKoXFbhEREREREREREQqUFBQgKOjo0Xss88+4/vvv2fUqFFWyur2+Pr6YjKZrhv7\nLQ8PD+bNm8e8efOuO4aTkxNTp05l6tSpt5WrgJ+fX7mYu7s7P/300zXvycrKAqhwtdbvreC61li5\nubk3kqqIyF2nApeIiIiIiIiIiEgF3n77bdLS0ujatSsuLi58++23rFy5End3dyZOnGjt9OQ+YGtr\nW2H8egXJqj6WiEhlsLF2AiIiIiIiIiIiIlVR586duXTpEvPmzeP1119n48aNPPvss3z55ZfUr1/f\n2umJVMjX1xeAw4cPl7tWUUxEpLrSCi4REREREREREZEKPPXUUzz11FPWTkPkpnTv3h0HBwfi4+OJ\njIw0n8N18uRJPvjgAytnJyJSebSCS0REREREREREROQe4e7uTnR0NN999x2dOnUiLi6OmTNn0rFj\nR5o2bQqAwWCwcpYiIrdPK7hERERERERERKTSfXwyj9mZ2fy36DL1HGow2c+HZ73rWDstkfvC5MmT\nqV27Nn/+85+ZNGkSDRo04M0338TGxoZ9+/bh6Oho7RRFRG6boSodEtihQwfT3r17rZ2GiIiIiIiI\niIjcho9P5hF1+D8UlP7/506ONgZiAxqoyFXJDhw4wPbt28nPz8fFxYVu3brRunVra6clVdTrr7/O\nwoULyc7Oxtvb29rpiIiUYzAY9plMpg430lZbFIqIiIiIiIiISKWanZltUdwCKCg1MTsz20oZ3ZsO\nHDhAYmIi+fn5AOTn55OYmMiBAwesnJlYW2FhYblYdnY2q1ev5sEHH1RxS0TuCdqiUERERERERERE\nKtV/iy7fVFxuzfbt27l82fIzvXz5Mtu3b9cqrvtcamoq48ePp2/fvtSvX59jx46xfPlyLl68yB//\n+EdrpyciUilU4BIRERERERERkUpVz6EGP1dQzKrnUOP/sXfn4TWd6//H3ytEBokECYkikZjnqSQ1\nJRF0UkM1HUREHUPUWFHFUdFjpqWtUkqblrQ4bVFTi0yqWkX1aBFztDSGGGJOQvbvj3yzf7adqCER\nw+d1XfuS/axnPetey1HHvvd9P4UQzcMrp3LrVsfl0VG5cmV8fX35+OOPOXXqFPb29jRu3JgRI0YQ\nHBxc2OGJiOQLJbhERERERERERCRfjfDxzHUPrhE+noUY1cPHxcUl12SWi4tLIUQj95PKlSuzbNmy\nwg5DRKRAaQ8uERERERERERHJV897lGJatQqUt7PFAMrb2TKtWgWe9yhV2KE9VFq3bo2trWVVnK2t\nLa1bty6kiERERO4dVXCJiIiIiIiIiEi+e96jlBJaBSxnn63Y2FjS0tJwcXGhdevW2n/rPpNybDkH\nD0zjSnoK9nae+PhG4unRobDDEhF54CnBJSIiIiIiIiIi8oCqW7euElr3sZRjy0lKGkVW1mUArqT/\nTVLSKAAluURE7pJaFIqIiIiIiIiIiIgUgIMHppmTWzmysi5z8MC0QopIROThoQSXiIiIiIiIiIiI\nSAG4kp5yW+MiInLrlOASERERERERERERKQD2dp63NS4iIrdOCS4RERERERERESkUUVFRGIZBcnKy\n1TFvb28CAgLM71etWkWrVq1wc3PDwcGBihUr0rlzZ/bu3WtxXkpKChEREVSsWJFixYpRrlw5evfu\n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\nGv3792fXrl2cPHkSfX19CgoKMDU15bXXXsPV1ZWwsDCmTJmClpYWTZs25cqVK/z999+sXLmSwYMH\n4+Liolpr0qRJRERE0LFjR5o0aUJ6ejpnz57F3d2d+Pj4p47xxx9/xMvLCzMzM8LCwjA1NWXz5s0c\nPHjwocesXLmSa9euMXz4cExNTVm/fj2TJk3CyspKbZvLl42pqSm7du1i4sSJREVFUVhYSPv27dmx\nYwcxMTGcPn36kcdra2sTFxeHjo4OoaGh5OfnM3nyZHR0dPjuu+9Yvnw5cXFxzJgxA4AGDRrQsWNH\nhg4dWhmXJ4QQQrzUpIJLCCGEEEIIIUSluXz5MgqFQnUzuJS3tzcKhYLFixerjTs7O9OiRQu1sdu3\nbxMUFES9evXQ19fHxcVFY6ux4uJiZs+eTZcuXbCwsEBXV5dXXnmFoKAgbt68qZqXlJREkyZNAJg5\nc6aqmqdx48YVeNWiOmnfvr1qq7nvv/+ewsJC0tPT+fbbb1VbyuXl5XHq1Cn++OMPcnNz+fPPP9HV\n1WXp0qVASUXWqlWriIyMxMXFhQMHDnDhwgUyMzM5cuQIRkZGBAcHExMT81RbPo4bNw6FQsHBgweZ\nMWMGo0ePJikpCV1d3Ycec+XKFU6ePMm0adMYOXIkiYmJmJubExUV9RTv0rNVWFhIeHg41tbW6Onp\n4eTkxKZNmzTmHTt2jPj4eOrUqYO3tzf29vbMnj2bwsJCoGTbwdjYWAAuXLhAQEAAVlZWbNy4EUtL\nS3r37s0vv/yCk5MTO3fuJCMjg7i4OAoKCujRowdfffUVr7/+uloyMikpidTUVBo3boybmxu//vor\nXl5efPXVV9StW5f09HQKCwvJzc0lLCyM+fPnc/r0adq3b8+xY8dITk5mw4YNeHl5ASWfS3PmzMHB\nwQF9fX1MTU3x8fHhxIkTz/6NFqKaO3dgH9EhASwc4EN0SADnDuyr6pCEEM8ZSXAJIYQQQgghhKg0\n1tbW2NjYkJiYqBrLz8/nxx9/REtLS238zp07/PLLL3h4eKit4e3tzZ9//sn06dOZPHkyv/32G2++\n+SZZWVlqa0ZGRtKsWTMmTJjAJ598Qvfu3YmJicHNzY38/HwAWrRooUqq9e3bl7i4OOLi4liyZMmz\nfBtENRccHKyWTGrYsCF2dnYkJyerxuLj41EqlUycOFFtboMGDQgICODy5ctPlcS4du0aR48epXfv\n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\nWnx2zua07l1D2rFVxkSH1r1rYOdsXmJjEt5OzeataTN4BAamZiCTYWBqRpvBI6jZvPWrDxY+Xvun\n/W9yUCE3q7Bd+GK5ublRUFDA1KlTsbKywtbWVmrPzs5m9uzZaGlp0aJFizc6v7e3NwUFBYwfP17t\n44r37B+rX+48YMzVv7iVnYscuJWdy5irf/HLHfE+/1WysrKUUiB/yvLz83n06JFSm0wmo379+oDy\n576UlBRkMpnK7vhX0dDQoGfPnly6dElt6kHFYsly5crRvn17Nm/erPb9n1wuJy1NdRf2J028fgmC\nIAiC8JrEDi7ho+fv78/evXsJDAwkPj4eNzc3ypYty82bN9m/fz+6urocOHCADjYduNvgLgMZiAwZ\nFvoW+Dv5075qe078dIKVK1dy79493N3dSU5OZsWKFTg6OqqdWC6uRo0aoaGhwcyZM3n48CH6+vpU\nrVoVZ2fnd/gMCILwKQgODiYrK4shQ4ago6PDsmXL8PHxoVq1ari6ugKwZMkSypUrx+DBgzE3N+f6\n9etERkbi6urK2bNnqV69OlC4u9TDwwNzc3P8/f2pUKECd+/e5ciRI/zxxx80adKkxO7TztlcBLQ+\nMzWbtxYBrc9N+q3Xaxe+CK1atUJDQ4PLly8r7QiuVasW5ubmXLp0iSZNmmBgYPBG5+/WrRv9+/dn\nyZIlnD17lo4dO2JqasqtW7c4fvw4165dIykp6R3dzbs3OymVrALlLAxZBXJmJ6V+VLu47t27x5Qp\nU9i6dSt3796lQoUKdOrUiWnTpkm1nnbu3En79u1ZuHAhfn5+KudwcXHh2rVr/P3335QqVQqAxMRE\npk2bxr59+7h//z6WlpZ88803hISEoK+vLx3r4+PDunXr+Oeffxg7dizbt28nLS2NpKQkrK2tP8hz\n8D5lZGRgYWFBp06dqF+/PuXLlyc5OZlly5ZhbGyMp6fnO7nOjBkziI+PZ9CgQezZs4dmzZohl8tJ\nSEggLy+P9evXA7Bs2TKaNWtGixYt8Pb2pn79+hQUFJCUlERcXBze3t6EhIS8kzF9FMTrlyAIgiAI\nr0kEuISPXqlSpdi+fTsRERGsX7+eKVOmAGBpaUnjxo2V8pG7WRWmVBlWbxgh3UKk9l9++YUJEybw\n/fffs3PnThwcHPjll19YsWIFiYmJbzw2Kysr1qxZw9y5cxk2bBi5ubn069dPBLgE4QuUnZ3Nb7/9\n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\nLJBSU1PVjgsODpYAKSUlpRquUBAEoe5RvTZHR0dLwcHB0quvvippa2tL7du3l7755pty/Y8dOyZ5\neHhITZo0kbS1tSVbW1vp888/l4qKiuQ+j35HASRLS0v58ZSUFMnT01MyMzOTtLW1JWtraykoKEjK\nzc1VO5fqNfrPP/+UJk6cKDVv3lxSKpVSfHy83Cc6Olrq16+fZGRkJOno6Ejt27eXVq1a9dhrTklJ\nkQApODhYbvP19ZUA6ffffy/X38PDQwKkW7duqV3jyJEj1fpZWlpKzs7O8u/ffvutBEjLli0rN+bS\npUslQPruu+/kNltbW8nR0VGSJEnKz8+XdHV1pZUrV0oDBgyQ3NzcJEmSpLt370pKpVIKCAhQG6+i\n+QBS9+7dy507LCxMAuTv2enp6RIgDR06tFxf1TWUfa6E2nH+SJoUGXRAWjE2VooMOiCdP5JW21MS\n6qCy94oWL14sv0aX/Td++vRp+XV7z549UpcuXSQdHR2pcePGklKplN5++23p4cOHkqurq6StrS11\n7txZ7TVe9fnd0dFRatiwofzZPT8/X7Kzs5M0NDQkXV1dycjISGrXrp00efJk6dixY5KGhobaPFTv\nAc7OzmrvMSqApFAopCNHjqi1v/XWW5KmpqaUk5Mjt92/f7/c8Q8fPpScnZ2lhg0bSg8ePJDbVe+L\nZd9rBKEuAX6TqhhTEjW4BKGMf/3rXyiVSr744gvWrVvHtm3bOHr0KFC6RVmpVHLu3Dm1XVpt2rTB\n3Nycs2fP0qVLl3IrCZYtW4a2tjY9e/bks88+Y8WKFfTv359t27YxYsSIlzK91eLFi/H398fCwoKI\niAj27t1LdHS0vHW7bG52QRAEQXgRqXLPV7X9Wejo6BAdHc3Ro0cJCgpCQ0ODWbNm8frrr7Nz585q\nO48gCEJ9MW3aNLZt24afnx9z5szhwYMHDB8+XP6eAbB3716cnJy4cOECkyZN4quvvqJbt27MmjWL\n4cOHy/02bdpUrsbh0qVLAbh8+TJdu3Zl+/btjBgxgiVLlvDGG28wf/58+vfvT3Fxcbm5ffDBBxw+\nfJhJkybx5Zdfyqv3v/76a9zc3Lh//z4zZsxg8eLF2NjY4Ovry5QpU57q+lNSUlAqlRXWCVPVhVbV\niX6aMcseX9GYZetKu7i48Ntvv5GTk8OhQ4coKCjAxcUFFxcXDhw4wIMHD0hISKCkpKTC2nsVqSjr\n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\nZgtEXRlq8/CizLJfM7miLKC5sSHBDrbq9YrkOtiRQ3E/a7QpNDDSw3WwY4WfqypkZGQQExODt7e3\nukpQiOfx0Ucf4e3tjY+PDxYWFvzyyy/4+/vz4MEDxo8frzUv4Fn8/PxwcnJi1apVfPrpp2RnZ2Nl\nZUXbtm1ZvHgxNjbSGlQIUbc5ODjwxx9/aLQInDp1KgsWLGDJkiWcOHGCbt26ERUVpa70ezRB1L59\ne6ZOnYqdnZ3Gvlu2bKF+/foaa1OmTOGll15i2bJlpU5wde7cmQ0bNqi/bteuHcOGDWPHjh34+/sD\n/6v+fXw+1fLly9W/HzNmDPPnz6dp06aMGTOmxHM9XkX2qMLCQq21J82DhPLPk1WpVFhbW7Njx44n\nHvNoe3CQWZFC1BQxMTH4+fkRHx/P0aNHiY6O5urVq7Rt25aQkBBGjBihPlahUDB+/HituYHFexw6\ndEjr5+K7d+/y3nvv8cUXX5CTk4OLiwsfffQRffv2fWZs7u7uZGRkaFW1/vLLLyxdupT4+Hj++usv\nrKyseOWVV1i4cCFdunQp77dCCCGEqFCVnuBSKBSvAZ8A+sBWlUq1/BlPEULUUNbW1mzYsEHjQkRJ\nfH19n1gBlJSUVPGBPcNQm8aVktB6XPGcreN7LnEnS4lZY2NcBzvqZP7W0z4clcTe3h57e3vy8vLU\nF8EyMjIICwvD3t6+Wie4Mq/u4ddLq7ivzMTE2BYHx1nY2gzWdViiBK6urly6dIkDBw5w6NAhDh06\nRGpqKs7OzqxevZrGjRuX+b3Dzc0NNze3Z567pOfr4v1ICCGq0qN37RcWFpKbm8uDBw/o168fS5Ys\nITk5mW7durFv3z709fWZPn26xvMnTpxISEiI1r6PJrfu3LmDUqlEX1+f7t2785///KfU8T3exq+4\nrfajbfqKq3+PHj1a4lyr0iquRMvKytKo7r1//z6ZmZm0bt26zHsWVx///PPPWo+lpqZqrbVp04YL\nFy7Qo0ePMrfmFULUDHPnzuXu3bsEBgYCEB0dzciRI7l///5zdckYN24c+vr6zJ07l9zcXD799FNe\ne+01vvnmm3LNo/3xxx/p27cvBQUFTJgwgZdffpmsrCwOHz7MDz/8IAkuIYQQ1UalJrgUCoU+sB7o\nD1wGTioUir0qlUr7p3khhKgDnLrbVGlC6+zZs+zevRtfX98KacVmYmLy/EFVocyre/j553kUFT2c\n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\n0wgODqZWrVq4ubnh6+tLQEAAAQEBWFhYmPZKbN68+S3nOHXqlNnX7u7uWFpa3tH59+7dS0pKCmXK\nlLnt/B4eHowcOZL//ve/BAYGUqpUKZo1a0br1q3p2LEjxYoVu6PzicjjRwUuEREREREREckTlStX\nxtfXlw0bNtC9e3fg386uKVOm4ODgAMDLL7/Mt99+y+zZsylWrBi2trakp6dTuXJl01xLlixh+PDh\nREdHs3DhQqpUqcK7775L//79c5w3JSXlrnM9e/Ysjo6OZrGqVatSuHBhzp8/f9fziYjkd+3atSMx\nMZHvvvuOjRs3sn79eiIiImjSpAnr1683dUotWrQIFxeXXOfIXp4wW24dsrdiNBpxcnLKsfzhjWrW\nrAlAlSpV2LNnD7GxscTGxrJx40bCwsIYM2YM//3vf3F3d7/j84rI40MFLhERERERERHJMzY2Njg4\nONC+fXtT7ObOri+++MLsPTt37sTPz4/nn3+ebt26UaNGDa5cuYKNjQ1Go5HZs2eb9nBZs2YN69at\n44svvuDgwYMcPXqUxYsXU69ePe5mH/CwsDD+/vtvWrZsiaurK6mpqXz11VekpKTQpUuXB3IvRETy\nm5IlS9K5c2c6d+6M0Whk+PDhhIeHs3r1aqpUqQKAo6Pjbbu47lWVKlX4888/adCgAUWLFv2f421s\nbGjTpg1t2rQB4LvvvuOFF17g448/ZsaMGQ88PxHJe9qDS0RERERERETyxMGDB1m7di2dO3emcOHC\npnh2Zxdg6uy60dNPP82OHTvo3Lkz3377LW+++SYffPABv/zyCyEhIfj7+5vGLlmyhG7duhEdHU2/\nfv2Iiopi/Pjx9O3b965yDQ4OxsXFhYULF5rOZ2VlxYoVK+jdu/c93gERkfzp+vXrJCUlmcUMBgN1\n6tQB4Pz583To0AEbGxvGjBlDampqjjmSk5NJS0u75xy6dOlCZmYmI0aMyPX4jcsfnj17NsfxZ555\nxpSriBRMhvy06V69evWMd/PpKREREREREbl/8fHx+Pr6smDBAlPXy4MQEhLCwoULtdm75LBlyxb2\n7t3Lp59+yt69e9m7dy8VK1Y0G9OmTRs2b97M8ePHzYpf8uTK3oMrNjaW3377jVmzZvH333/j6urK\nqFGj6Nq1q9n4efPmMXPmTPbu3Yu1tTXe3t68++67PPfcc2bjDAYDXbt2pUuXLowaNYrff/+dkiVL\n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\n/v7+REREsH37dlq2bImbmxshISE3zV2kKOiIQhEREREREREREZESIjs7m02bNuHg4ABAtWrVaN26\nNc8//zwbN24kNDQUgMGDB+Pn58fUqVPp3LmzpX+jRo2sxktOTiY+Pp6uXbtaYjt37sTd3d1SnMp1\nvaPzSpcubTly7+jRo/Tr149HH32UDRs24O7ubmn39ttvk5OTc4efwO175plnmDt3LosWLSI9PZ2K\nFSsSExPDyJEjsbW1veVxhgwZwqVLl3jttdcAmD17Ni+99BJXrlwhKirquv0WLVrEvn37eOGFF/Dz\n8yMtLY05c+bQrl07PvvsMzp27AjAq6++yocffsisWbPy3G82Z84csrOz6d69uyU2ffp0oqOjqV+/\nPm+++SYuLi6sXLmSXr16ceDAAcaNG2c1xpEjRzCZTDz//PO0b9+eixcv3vLaRe4lFbhERERERERE\nRERESohevXpZilsA4eHhAISFhVmKWwAODg7Uq1eP9evXF3gOZ2dnHB0d2bx5M8nJyfj7+99y3y+/\n/JLMzExGjhxpVdzKZWNTdIeOxcTEEBMTc8fjpKamsmvXLtzc3ACIjo4mJCSEgQMH0qFDB5ydnfPt\n99Zbb+UpWPXr1486derwzjvvWApcNWrUoEGDBsyZM4d33nnHqvg2a9YsqlatyhNPPAFc29HVr18/\nXnzxRRYsWGBp99prr9G/f38mTJhAr169CAwMtDw7dOgQn376qVWRTKQ40hGFIiIiIiIitygxMRHD\nMIiPjy/qVERERETy9ddCBYCHhwcAAQEBedp6eHiQlpZW4DkcHBz44IMP2L17NwEBAVSvXp2+ffuy\nevXqm/bNPVavTp06BZ73ftGrVy9LcQvAzc2N6Ohozpw5Y3WP2d+5uLhYvr98+TJpaWlcvnwZk8lE\nUlIS58+ftzzv0aMHKSkpLF++3BL78ccf2b9/P6+88ool9tVXX5GRkWG53+yvr1atWpGTk8OqVaus\n8vD09LTasSdSXKnAJSIiIiIiIiIiIlJCXO8ovYIcsfd3WVlZeWLR0dEkJyfz6aefUrduXb766iua\nNWvGiy++eNvzlBRVq1bNE6tWrRoABw8evG6/kydP0qNHDx566CFcXFzw8vLC29vbclfW2bNnLW07\ndOiAm5sbM2fOtMRmzpyJg4MDL7/8siWWlJQEQLNmzfD29rZ6NW/eHIATJ05Y5REUFHRHf15E7hUd\n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\nOg0RKUI7duxg1KhRRERE4O/vX9TpiMh9Qju4RERERERE5IHx383HWfPZPi6ezgDg4ukM1ny2j/9u\nPl7EmYncv5KTk2nfvj1lypShTJkytG7dmuTkZPz9/YmIiLBqaxgGUVFRrF69mkaNGlG6dGlatWpl\neX7u3DmGDBlC5cqVcXR0xNvbm5deeomDBw9ajXPhwgXeeustwsLC8PLywtHRkcqVKzN06FAuX75s\naRcfH09kZCQAXbt2xTAMDMPIk5eIiIjcf1TgEhERERERkQfGxiUHyMrMsYplZeawccmBIspI5P6W\nlpZGeHg4S5cuJSoqinfffRcXFxciIiK4dOlSvn22bt1KmzZtqFevHhMnTqRTp07AteLWE088wUcf\nfcTTTz/N5MmT6dOnDwkJCYSFhXH48GHLGH/++SczZswgNDSU4cOHM2HCBOrWrct7771H27ZtLe0a\nN27MG2+8AUCPHj2YN28e8+bN48033yzET0Xk/paVlUVcXBx+fn44OjoSEhLCF198kafd1q1badu2\nraXIXKVKFUaPHk1WVpZVuz179vD8889ToUIFHB0d8fHxITIykmXLlgEQFxdH165dAYiMjLQUoqOi\nogp9rSJyf9MRhSIiIiIiIvLAyN25datxEbmxd999l6NHjzJ//nxLoapXr14MHjyYcePG5dtnz549\nrFy5kmbNmlnFR4wYwcGDB9m0aRO1atWyxKOioqhZsyYjR44kPj4egMDAQP744w/s7e0t7Xr37s3w\n4cN55513+Pnnn6lXrx6BgYE0b96cf//73zRo0IDOnTvf5U9ApOQZMmQIly5d4rXXXgNg9uzZvPTS\nS1y5csVSdFq2bBnt2rWjcuXKxMTE4OnpycaNGxkxYgQ7duzgyy+/BK4VwU0mEwDR0dH4+fmRmprK\n1q1b2bx5M08//TTt2rUjJSWF6dOn88Ybb1C1alUAgoKC7v3iReS+ogKXiIiIiIiIPDBKezrmW8wq\n7elYBNmI3P+WLl2Kr68vL730klU8Njb2ugWuWrVq5Slumc1mPvvsMxo3bkyFChVITU21PHNxcaF+\n/fqsWLHCEnNwcLB8n5WVxYULF8jOzqZZs2a88847bN68mXr16t2NJYo8cFJTU9m1axdubm7AtcJU\nSEgIAwcOpEOHDhiGwSuvvEJYWBgJCQnY2V37EXPPnj2pVasWAwcOJDExkYiICNavX8/Jkyf5z3/+\nwwsvvJDvfCEhITRo0IDp06fTvHlzHSEqIrdMRxSKiIiIiIjIA6NB6yDsHKz/KWznYEOD1votcZHb\ncejQISpXroyNjfXfq3LlyuHu7p5vn+Dg4DyxU6dOkZaWxooVK/D29s7zWrlyJSdOnLDq89FHHxES\nEoKjoyOenp54e3tbfjB+5syZu7NAkQdQr169LMUtADc3N6Kjozlz5gyJiYmWv49du3bl7NmzpKam\nWl5PPfUUgKUgnTvOd999x/nz5+/9YkSkRNMOLhEREREREXlgBIf5ANfu4rp4OoPSno40aB1kiYtI\n4StVqlSemNlsBqBZs2YMGTLkpmNMmDCBmJgYWrRoQb9+/ShfvjwODg78+eefREVFkZOTc9MxRCR/\nuUcE/lW1atUAOHjwoOV+vW7dul13jNyCdJMmTXj55ZeJj4/ns88+4/HHH6dZs2Z06NDBMqaIyO1S\ngUtEREREREQeKMFhPipoidwl/v7+/P777+Tk5Fjt4jp58iRnz5695XG8vb1xd3fn/PnzeY4vzM+8\nefPw9/fnu+++s5r3+++/z9PWMIxbzkNEbi63ID1u3Dhq166db5vy5ctbvp8zZw6DBg3iu+++Y926\ndbz//vuMHj2aDz74gD59+tyTnEWkZNIRhSIiIiIiIiIicltatWpFSkoKn3/+uVV8/PjxBRrHxsaG\nTp068fPPP/PVV1/l2+bkyZOW721tbTEMw/KDdrh2F9fYsWPz9CtdujQAp0+fLlBOIg+qpKSkPLG9\ne/cCEBgYyCOPPAJcux+vWbNm+b7+vjurRo0aDBo0iG+++YajR48SFBTE0KFDLX+HVYgWkduhHVwi\nIiIiIiIiInJbhgwZwoIFC+jatSs///wzjz76KOvWrWP9+vV4eXkV6IfWo0ePZv369bzwwgu88MIL\n1K9fHwcHBw4fPszy5ct57LHHiI+PB+C5555j2LBhPPnkk7Rr147z58+zYMEC7O3t84xbrVo1XF1d\n+eijjyhVqhTu7u6UK1cOk8l0tz4GkRLl448/trqH69y5c0ybNg13d3eaNGmC2WymXLlyjB07lg4d\nOuDp6WnVPz09naysLFxdXTl9+jTu7u5WOy3d3d0JCAhg//79XLlyBWdnZxWiReS2qMAlIiIiIiIi\nIiK3xcvLi59++omYmBhmzZqFYRg0adKEhIQEwsLCcHZ2vuWx3NzcWL9+Pe+//z4LFy5kyZIl2NnZ\nUbFiRRo1akT37t0tbQcNGoTZbGbmzJn0798fHx8fOnToQNeuXfPsHHF2duaLL77grbfe4vXXXycj\nI4MmTZqowCVyHV5eXoSFhdG1a1cAZs+ezZEjR5gxY4blDr25c+fSpk0bqlSpQrdu3ahcuTJnz55l\n3759fP311yxatIiIiAjmzp3LxIkTadu2LZUrV8be3p61a9fyww8/8MILL1j+G/H4449jY2PD6NGj\nOXPmDC4uLgQEBBAWFlZkn4OIFH/GX7dyF7XQ0FDz1q1bizoNERERERERERG5A2lpaXh5edGzZ0+m\nTZtW1OmIyC2Ij4+na9eurFy5knXr1jF79mxOnDhBcHAww4YNo2PHjlbtd+/ezdixY1mzZg2nTp3C\nw8ODoKAgnnzySXr37o2npyc7duxg4sSJrF+/npSUFGxtbQkICODll1+mT58+ODo6WsabM2cO7777\nLr///jtXr17ln//8p2XXpog8OAzD2GY2m0NvqW1hFbgMw4gDXgVO/S/0htlsXn6jPipwiYiIiIiI\niIjcX9LT0/Ps1Bo0aBDjx4/nq6++on379kWUmdyPcossq1atYv369cycOZOTJ08SEhLCpEmTqF+/\nPmvXruXNN99k+/btlClThtdee43hw4dbxlixYgUzZ85ky5YtpKSk4OjoSL169XjzzTdp0qSJ1XwR\nEREkJyezYcMGYmJi+P7778nIyCA8PJzJkycTHBx8rz8CEZEHWnEqcF00m823fKuoClwiIiIiIiIi\nIveXyMhI/Pz8qFu3Ljk5OaxevZpvv/2WJ554gh9//BFbW9uiTlHuI7kFrtDQULKzs+ncuTOZmZm8\n//77ZGRkMHfuXF555RV69OhBpUqVWLhwIYmJicybN4/OnTsD0LFjR06dOkXDhg2pWLEif/75JzNm\nzCAlJYU1a9YQHh5umS8iIoI9e/bg5uZG/fr1adiwIYcOHWLSpEkEBgaye/du/RkWEbmHClLg0h1c\nIiIiIiIiIiJy25555hnmzp3LokWLSE9Pp2LFisTExDBy5EgVBuS2ZWdns2nTJhwcHACoVq0arVu3\n5vnnn2fjxo2Ehl772ecrr7yCn58fU6dOtRS4Pv30U1xcXKzGi46Opnr16owZM8aqwAWQmprKoEGD\nGDx4sCXm7e3N4MGDWbVqFS1btizMpYqIyG2yKeTx+xqGscswjFmGYXjk18AwjB6GYWw1DGPrqVOn\n8msiIiIiIiIiIiLFVExMDDt37uTcuXNkZmZy8OBBxo8fj6ura1GnJneJYRhERUXd0zl79eplKW4B\nlqJUWFiYpbgF4ODgQL169di/f78l9tfi1sWLF0lLS8PW1pawsDA2b96cZy4bGxv69etnFTOZTABW\n44qISPFyRwUuwzBWGYaxO59Xa+BjIBCoDaQA7+c3htlsnm42m0PNZnOot7f3naQjIiIiIiIiIiIi\nJUBgYKDVew+Pa787HxAQkKeth4cHaWlplvcHDhzgxRdfxMPDA1dXV7y8vPD29mb58uWcOXMmT//y\n5cvj5ORkFStbtiyA1bgiIlK83NERhWazudmttDMM41Pg2zuZS0RERERERERECl/SujWs+2IuF9JS\ncS3rRfiLL1M1PLKo05IHzPWOt7zZsZcXL16kcePGXLp0iddff52aNWvi6uqKjY0NY8aMISEhoUBj\nms3mgiUuIiL3TKHdwWUYhq/ZbE7539u2wO7CmktERERERERERO5c0ro1rJg+hazMDAAupJ5ixfQp\nACpyyX1h9erVHDt2jFmzZtG1a1erZ2+99VYRZVU0/u/4acYcTOHPjKtUcLRnWKAv7X08izotEZG7\npjDv4HrPMIxfDcPYBUQCAwpxLhERERERERERuUPrvphrKW7lysrMYN0Xc4soIylsV65cIS4ujipV\nqlCqVCnc3d2pWbMmgwYNytN248aNNGnSBBcXF8qWLUv37t25ePFinnYpKSn06tWLSpUq4eDgQPny\n5enRowcnT54s9PXk7sb6+86rFStW5Hv/Vkn1f8dPE/vbHxzNuIoZOJpxldjf/uD/jp8u6tRERO6a\nQtvBZTabuxTW2CIiIiIiIiIiDxLDMPjnP/9JfHz8TdvGxcUxatQoDh06hL+/f4HmuZCWWqC43P96\n9+7NrFmzePnllxk4cCBZWVns378/z1F+O3bs4JlnnqFr16507NiRxMREZs6ciY2NDdOnT7e0O3Lk\nCA0aNCAzM5NXXnmFoKAgfv/9dz7++GPWrFnD1q1bcXNzK7T1NGrUCB8fH2JiYkhOTqZixYrs2LGD\nefPmUbNmTX799ddCm7s4GXMwhfQc6yJfeo6ZMQdTtItLREqMQitwiYiIiIiIiIjI/cW1rBcXUk/l\nG5eSadGiRTz55JPMmTPnhu127drFxo0bCQsLA6Bnz56cP3+e2bNnM2HCBEqXLg1A3759uXr1Ktu3\n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\nMpno2rXrXddtMpksZnXl5eUxe/bsuxpPRERERO6cZnCJiIiIiIhIiSjc2+rz9afIvHwDl/L2tOjq\nVyp7XpWlWv7KOnfujJOTE5NnjaN310GkpuSSlPwl33x/kGpVfTBZGxb5zZs3JzY2lmnTplG3bl2s\nrKwICwvD2dm5yNjW1tYsXLiQ7t2707RpU4YNG4arqyvvvPMO+/fvZ/LkydSsWfOu6u7ZsycvvPAC\nnTt35oknnuDq1ausWbMGW1vbuxpPRERERO6cGlwiIiIiIiJSYmoFViozTaSyVMtflZ+fHx9//DGT\nJ09macIbWFtb06pVK/a//xljxowhJSXFIn/mzJlcvnyZRYsWkZaWhmEYnD59utgGF0BYWBjbt2/n\n5ZdfJiYmhpycHOrWrcvy5csZMmTIXdcdFRWFYRjExsYybtw4KlWqRK9evYiIiMDf3/+uxxURERGR\n22f65XT60hYQEGAcOnSotMsQERERERERERERERGREmYymQ4bhhFwO7nag0tEREREREREREREREQe\nKGpwiYiIiIiIiIiIiIiIyANFDS4RERERERERERERERF5oKjBJSIiIiIiIiIiIiIiIg8UNbhERERE\nRERERERERETkgWJT2gWIiIiIiIiISNl25MgRtm/fTnp6Ou7u7rRv356GDRuWdlkiIiIi8hemGVwi\nIiIiIiIiZVh0dDQffPDBPY+zYMEC4uPj7/i8I0eOsGHDBtLT0wFIT09nw4YNHDly5J5rEhERERG5\nW2pwiYiIiIiIiJRhM2bMKNUG1/bt28nNzbWI5ebmsn379nuuSURERETkbqnBJSIiIiIiIqUqODgY\nHx8fi1h4eDgmk8kiFh0djclkIiUlpeSKE/PMrduNi4iIiIiUBDW4RERERERE5IG1a9cuoqOjSUtL\nK+1S7sr169eJjo6mdu3aODk54eHhQYMGDYiKiiIlJcXc5FuxYgUmk8n8KPTOO+/w+OOPU61aNezt\n7fH09KRbt25Flg80mUycOXOG3bt3W4zzy2bhoUOH6N69O56entjb21O7dm1mzpyJi4uLxVgXL17k\nvffeY/78+djb21OpUiXatWvHxo0b798LJSIiIiLyKybDMEq7BrOAgADj0KFDpV2GiIiIiIiIlKCc\nnBwMw8De3t4cCw8PZ8WKFfzyPWteXh55eXnY29ubmzzR0dHMmDGD06dPF5kF9iAYMmQIb7/9NgMH\n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\nazm8hIQE2rZty9q1ay3iJ0+evKtrDR06lHHjxnHw4EFiY2NxcHCgX79+dzUW3GymFTbLtm3bRmZm\nprnh9cILL5j3vVq8eDGjR49m5syZ5plUvXv3xs/Pj48//pj/x96dh1VVrn0c/25A5llQUEtEw0ol\npxxywgmnSizLWbGUnMLKKXBCxSFn0zw2mDjkWx7TDDXHwszUk2XRMTVL0QacBYEQBfb7h4eduw2K\nim7B3+e6vNr7Xs961r02RLZu7ueJjo5mypQp2Nra0qhRI3bs2MGQIUNISkoyu97kyZM5f/48b731\nFikpKRiNRoYOHcq8efM4duwY33zzDdOmTWPFihWcOXMGLy8vKleuzGuvvUZwcDAAISEh7N+/n/Xr\n15OcnIytrS2VKlVi5syZN7X/VkBAAAEBASQkJNzy5yf3pszMTKsWtkVExDq+//57PvnkE8LDwy32\nRRW5U1TgEhERERERkWLL1dUVuLp03j8fptja2los35eRkcGcOXNu6Vq9evVi1KhRzJgxg/j4eDp3\n7oynp+ctzQVX9yObOnXqDcc99NBDbNmyJd9jTZs25auvvrKI51c4KlOmDB9//LFZLCYmxvS6evXq\nrFixgoSEBBISEnjllVcs7q9mzZosXbr0hjnL/SUzM5NSpUphZ2eHo6OjtdMREREr+P7775kwYQIh\nISEqcMldoz24REREREREpNhq0KABAKNGjSIuLo4PP/yQ//73vwB07tyZnTt30qVLF959911iY2Op\nUaMG7u7ut3QtLy8vOnfuzOrVq8nKyqJfv35Fdh/WMmbMGDIzM6lYsaIplpCQwIQJEyz2B5O7Jy0t\njTFjxlC/fn18fHxwcHCgSpUqvP766/z111+mcQkJCRgMBuLi4li4cCFVq1bF0dGRGjVqsH79egB+\n/PFH2rZti7u7O6VLlyYyMpIrV65YXPPIkSP06tULf39/7O3tCQgIYMSIEWRkZJiNCw8Px2AwcObM\nGV544QXKli2Li4sLv//+O1DwHlxffPEFHTp0oHTp0jg6OhIYGMiLL77I2bNnTWMWLlxIaGgo5cuX\nx97eHn9/f3r27GnRjXjtdXbv3k2zZs1wcXGhdOnS9OvXj/T09Fv52KUYi4uLw2Aw3LArNFeg4ZgA\nACAASURBVCAggJCQkLuSk4iI3Hnq4BIREREREZFiq1GjRrzxxhssWrSI/v37k52dzfjx46levTqz\nZ8/Gzc2NVatWsW7dOh544AEiIiJ4/PHHadWq1S1dLyIighUrVlClShWaNWtWxHdz99nZ2WFnp0cD\n95o//viD9957j2effZbu3btjZ2fHjh07mD59Ovv372fz5s1m49966y0uXLhAv379cHR05M0336RT\np078+9//pn///nTr1o2wsDC2bNnC/PnzKVOmDGPGjDGd/+2339KiRQs8PT156aWXKF++PD/88ANv\nvvkmu3btYseOHZQqVcrsmq1bt8bPz4+xY8eSkZFh6qbMz9tvv83AgQMpX748AwcOpGLFipw4cYL4\n+Hh+//13fHx8AJg5cyYNGjQgMjISb29v/vvf//Lee+/x+eef8+OPP1K6dGmzeb///nuefPJJ+vbt\nS/fu3UlISGDx4sXY2Njwzjvv3O6XQURECikmJoYJEyYA0Lx5c1O8T58+xMXFWSkruS8YjcZ75k+d\nOnWMIiIiIiIiIveqvXv3GgHjlClT7up1x48fbwSMx44dszhWsWJFY7NmzUzvAWOfPn2MX3/9tbFp\n06ZGZ2dno7e3t/HFF180pqWlXXfePn36GAGLP+PHjzedk5KSYhw5cqSxcuXKRnt7e6OPj4+xa9eu\nxl9//dUitxMnThife+45o7u7u9HNzc345JNPGn/55ReLnMVcVlaW8fLlyxbxMWPGGAHj3r17jUaj\n0fjFF18YAWO5cuWMKSkppnE//PCDETAaDAbjxx9/bDZH7dq1jX5+fmax4OBgY9WqVY0XL140i69Z\ns8YIGJcsWWKK5X2P9OjRI9/c877/8vz2229Ge3t74yOPPGK8cOGCxficnBzT6/T0dIvj27ZtMwLG\nN954w+I6BoPBuGfPHrN4+/btjXZ2dhbf61KyLVmyxAgYv/jii+uOu3TpkjErK+vuJCVyH/nhhx+M\nERERRsAYHR1tXL58uXH58uXGr7/+2tqpSTEE7DMWsqakX9MSERERERERKaQFCxZQqlQp+vbta+1U\nrutWO1teeuklLl68yNq1a5kzZ46psyY4OBiA1NRUnnjiCU6cOMELL7xAtWrVSE5OZuHChdSvX599\n+/aZljtMSUmhadOm/PbbbwwYMIBHH32UHTt20Lx5czIzM+/8h1CM2dvbm15nZ2eTlpZGTk4OrVq1\nIjY2lr1791KvXj3TmPDwcDw8PEzvg4ODcXd3x83NjWeeecZs7saNG/Pmm2+Snp6Oq6srP/74I4mJ\n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\nazQa6xZmrJYoFBERERERERERucbAgQNNxS2ArVu3kpGRQWRkpKm4BeDu7k5kZCTp6els27bNbI7y\n5cubFbcAGjdujNFo5OWXXzYVtwCaNGkCwJEjR0wxe3t7U3ErOzubCxcucPbsWVq1agXA3r17LfLu\n27evqbgF4OzsTIMGDczmFRERKSm0RKGIiIiIiIiIiMg1goKCzN4fO3YMgGrVqlmMzYsdPXrULF6p\nUiWLsV5eXvkey4ufO3fOLL5w4UIWLVrEgQMHyM3NNTt24cIFi/kDAwMtYqVLl7aYV0REpCRQgUtE\nREREREREROQa13Zv3SpbW9ubPnbtViKzZ89m2LBhhIaGEhkZSbly5bC3t+ePP/4gPDzcouB1o2uK\niIiUNCpwiYiIiIiIiIiIXEdeZ9SBAwdo2bKl2bGffvrJbExRWb58OQEBAXz22WfY2Py9y8imTZuK\n9DoiIiLFlfbgEhERERERERERuY7WrVvj4uLC/PnzSUtLM8XT0tKYP38+rq6utG7dukivaWtri8Fg\nMOvqys7OZtq0aUV6HRERkeJKHVwiIiIiIiIiIiLX4enpyfTp0xk8eDD169cnPDwcgLi4OH755Rfe\nfvttPDw8ivSanTt3Jioqinbt2vHMM89w8eJFVq5cSalSpYr0OiIiIsWVClwiIiIiIiIiIiI3MGjQ\nIPz9/ZkxYwYTJkwA4LHHHmPt2rWEhYUV+fVGjBiB0Whk8eLFDB06FD8/P7p06ULfvn159NFHi/x6\nIiIixY3h2jZna6tbt65x37591k5DRERERERERERERERE7jKDwfCt0WisW5ix2oNLRERERERERERE\nREREihUVuERERERERERERERERKRYUYFLREREREREREREREREihUVuERERERERERERERERKRYUYFL\nREREREREREREREREihU7aycgIiIiIiIiIiJyJxzc+QU7P1xG2rmzuJX2oUnX3jzSpLm10xIREZEi\noAKXiIiIiIiIiIiUOAd3fsGWdxaQfTkLgLSzZ9jyzgIAFblERERKAC1RKCIiIiIiIiIiJc7OD5eZ\nilt5si9nsfPDZVbKSERERIqSClwiIiIiIiIiIlLipJ07e1NxERERKV5U4BIRERERERERkRLHrbTP\nTcVFRESkeFGBS0RERERERESkGDt27BhhYWH4+vpiMBgIDw+3dkrXlZCQgMFgIC4u7o5ep0nX3tjZ\n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\njnY2jAr1sVJGIiIi8iRbl7iOVl+2wneRLzP2zABg0KBB5uIWgIuLCwMHDuTSpUvEx8dbKdPfOTco\ng2v76uYVWzauDri2r679tx4jWsElIiIiIiIi8pBp26ACkL8X1+nLaZR3dWRUqI85LiIiIvKgrEtc\nR8SuCNJz0gG4nHEZgKtuVwuNrV27NgCJiYkPLsFbcG5QRgWtx5gKXCIiIiIiIiIPobYNKqigJSIi\nIlY36/tZ5uLW9WITY/k7f7dCRiL51KJQRERERERERERERESKdObqmaLjiYXjhw4dAsDT0/NPzUkE\nVOASEREREREREREREZGbKOtctsh4cnwyycnJvz9PTmbevHm4urrSsmXLB5VekWJiYjAYDGzevJmI\niAiqVKmCg4MDvr6+LF261Kq5yf2jFoUiIiIiIiIiIiIiIlKkNxq+YbEHV4EKT1WgadOm9O7dG4CF\nCxdy8uRJPv74Y5ycnKyRaiGjR4/m6tWrDB48GMjPsWvXrqSnp2MymaybnNwzFbhERERERERERERE\nRKRIL3m+BOTvxXXm6hlcHVw5xSnmzZzH119/zYcffsjZs2epUaMGS5Ys4dVXX7Vyxr87f/48CQkJ\nuLi4ADBw4EB8fX0ZPnw4nTt3xtHR0coZyr1QgUtERERERERERERERG7qJc+XzIUuegEf5v8YEhLC\npEmTrJbXHxk0aJC5uAXg4uLCwIEDGTduHPHx8bRu3dqK2cm90h5cIiIiIiIiIiIiIiLy2KlVq1ah\nWO3atQFITEx80OnIfaYCl4iIiIiIiIiIiIiIiDxSVOASEREREREReYhFRERgMBg4fvy4tVMRERER\neaQcPny4UOzQoUMAeHp6Puh05D5TgUtERERERETEyuLj44mIiODy5cvWTkVERETksTF37lySk5PN\nz5OTk5k3bx6urq60bNnSipnJ/WBr7QREREREREREnnTx8fFMmjQJk8mEq6urtdMREREReSyULl2a\npk2b0rt3bwAWLlzIyZMn+fjjj3FycrJydnKvVOASERERERERsZIrV65QokQJa6chIiIiT7Dk2FjO\nRc0kOykJ23LlKDNsKC5hYdZO67549913+frrr/nwww85e/YscZ1msQAAIABJREFUNWrUYMmSJbz6\n6qvWTk3uA7UoFBEREREREblOTEwMBoOBLVu2MGPGDLy8vHBwcKBGjRosWrSo0PiPP/6Yhg0b4ujo\niIuLC61atWLHjh2FxhkMBkwmE3FxcTz33HMUL16csLAwTCYTkyZNAqBatWoYDAYMBgMREREWx2dk\nZDBu3DgqVqyIg4MD9erVY/369X/KeyAiIiJPhuTYWJLGTyD79GnIyyP79GmSxk8gOTbW2qndF7a2\ntkyaNImTJ0+SkZHBgQMHVNx6jGgFl4iIiIiIiEgRxo0bR1paGgMGDMDBwYG5c+diMpnw9vbG398f\ngNGjRzN9+nSaNGnCO++8w5UrV5g/fz6BgYGsWbOGF1980WLOvXv3smLFCsLDw+nVqxcATz/9NCkp\nKaxatYqoqChKly4NgK+vr8WxNWvW5LnnnmPkyJFkZmYyc+ZM2rZty08//UTVqlX//DdEREREHjvn\nomaSl55uEctLT+dc1MzHZhWXPL5U4BIREREREREpQkZGBnv27MHe3h6Ajh074unpyezZs/H39+fI\nkSNERkbi7+/Pli1bzOP69etH7dq1GTx4MD///DM2NjbmOQ8ePMimTZsICQmxOJevry+rVq3i+PHj\nDB069KY5bd++HYPBAEBgYCBNmjTho48+YurUqff78h8Z8fHxBAYGsnDhQkwmk7XTeejo/RERkVvJ\nTkq6o7jIw0QtCkVERERERESKMHjwYHPRCqBChQrUqFGDo0ePArBmzRry8vJ48803LcaVL1+e3r17\nc+LECfbv328xZ7169QoVt643a9asW+ZUUNwCeOaZZyhevLg5n4dRREQEq1evtnYaIiIichO25crd\nUVzkYaICl4iIiIiIiEgRPD09C8Xc3d25cOECAMeOHQOgTp06hcYVxBITEy3iNWrUuK85Xp/Pw2jS\npEkqcImIiDzEygwbisFotIgZjEbKDLv5ivJHgclkIi8vj4CAAGunIn8iFbhERERERERE/l96erq5\nIPPiiy/i6upK3bp1GTVqlHlMXl4eH3/8MV9++SUA9evXp1WrVuzYsaPQfJ07dyYiIsL83MnJCchf\n2WQwGDh+/DgAMTEx5jEGg8H8uD4OkJyczKBBgyhTpgxGo5EzZ86QnJx8H6784XDlyhVrpyAiIvJE\ncQkLo9zf38a2fHkwGLAtX55yf39b+2/JI0EFLhEREREREZH/99prr7FmzRrzz1OmTCE4OJgtW7aY\nx1y6dInw8HAcHR0BCAsL49ChQwQGBrJ+/XoADh06dEfnbdGihfnnxYsXmx/XxwFCQ0P59ddfmTBh\n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\nzs7m7Nmz2NnZUapUKYtVVu+++y5r166lUqVKpKWlcenSJb766ivKlStnXk1YkEdycjKtW7fm2rVr\n+Pn5cfLkSc6dO8f333/PDz/8QMeOHRk0aBAAr732Gp988gk9e/Zk+PDhZGdnc/ToUbZs2XIXvwkR\nEbnRoEGDHlhxSx4fKnCJiIiIiIjIYy05NpZzUTPJTkrCtlw5ygwbiktYmLXTeiCMRiNvvfUWb731\n1i3HOTk5MX78eMaPH3/LcSaTybwfxo3i4+MLxapXr87GjRuLHH+zwlxBPpGRkUWujLnxuICAgFvO\nJbBw4UJMJhN5eXkkJSUVKjRFR0fTr18/li1bRqdOnSxec3Jy4uDBg+a9rQYOHEjdunU5dOiQ+X3P\nzs5m+PDheHh4cOjQIdzc3ID89oS+vr7muSpXrmwxt6enJ1999ZVFrGrVqvj5+Vl8nr766iucnZ0t\nxh0+fJj69evTuHFj5syZA+Tv5xUREUHdunX57rvvMBqNQH57wutbXRXkMWHCBBITE9m9ezf16tUz\nv37ixAnq1q2L0WikadOmQP4+YK1bt2bRokU3e5tFROQeFLSuFbkT2oNLREREREREHlvJsbEkjZ9A\n9unTkJdH9unTJI2fQHJsrLVTE3ngDAaDubiVk5PD5cuXOX/+vHk11rffflvomLZt25qLWwVzBAYG\ncubMGVJTUwHYt28fp0+fpkePHpQsWdI8tnjx4ubVgs7OzjRs2PCu8i4obuXl5ZGSksL58+fx8PDA\nx8fHIudNmzaRnp5Ov379zMUtgLJly9KuXTsgv4BWsMpsyZIltGjRggoVKnD+/Hnzw9nZGT8/P4vi\nrIuLCwcPHuS///3vXV2DiIjcmlZvyd3QCi4RERERERF5bJ2LmkleerpFLC89nXNRM5+YVVwi11u+\nfDnvvfce+/fvJysry+K1S5cuFRrv6elZKFawF9qFCxcoXrw4x44dA8DNzQ1vb2+6dOlCtWrVSEpK\nMq+u6tChA/b29neV8/79+xk/fjzx8fFcvXrV4rXr96gryOPatWvUrVuX9u3bU7FiRY4fP86XX34J\nQP/+/QH47bffuHDhAhs3brRoo3i9YsV+vy985syZ9OjRg7p16+Lp6UlgYCBhYWGEhYVZjBMRkUdL\nbm4uM2bMYO7cufz6669UqVKFt956i169elk7NbkNKnCJiIiIiIjIYys7KemO4iKPs5UrV9K5c2ea\n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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7f0ae7644c50>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.manifold import TSNE\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "rng = 300\n",
    "\n",
    "embed_matrix = sess.run(model.embed_matrix) # get the embed matrix\n",
    "\n",
    "X_embedded = TSNE(n_components=2).fit_transform(embed_matrix[:rng])\n",
    "\n",
    "plt.figure(figsize=(30,30))\n",
    "\n",
    "for i in range(rng):\n",
    "  plt.scatter(X_embedded[i][0], X_embedded[i][1])\n",
    "  plt.text(X_embedded[i][0]+0.2,\n",
    "           X_embedded[i][1]+0.2,\n",
    "           index_dictionary.get(i, 0), fontsize=18)\n",
    "  \n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "## Assignment"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Since we have already implemented Skip-Gram, the assignment for this week is to implement CBOW. Recall that CBOW actually does the reverse compared with Skip-Gram, given the sentence  \n",
    "\n",
    "`the quick brown fox jumped over the lazy dog`  \n",
    "\n",
    "and window size set to 1 you should generate the following training dataset,\n",
    "\n",
    "`([the, brown], quick), ([quick, fox], brown), ([brown, jumped], fox)...`   \n",
    "\n",
    "<img src=\"files/cbow_graph.png\" width=\"350\">\n",
    "\n",
    "The basic requirements of this assignment:\n",
    "1. Implement CBOW.\n",
    "2. You are encouraged to try out any combinations of the hyperparameters, but window_size is always equal to 1.\n",
    "3. Plot the the embeddings of the first 200 words in your dictionary using t-SNE in the notebook.\n",
    "4. When you hand in the assignment, please include:\n",
    "    - A `.ipynb` file containing detailed descriptions of what you have done to generate training data, the modifications you made to your model, the hyperparameters you used, and the t-SNE plot of the embeddings of the first 200 words in your dictionary.\n",
    "    - Print the top-10 words with closest cosine distance of words \"word\", \"two\", \"vector\"\n",
    "    - The python file for your model and any other files needed to run your code.\n",
    "\n",
    "** Please name the notebook as Lab09-學號.ipynb and hand in the assignments before 11/12 23:59 ** "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
